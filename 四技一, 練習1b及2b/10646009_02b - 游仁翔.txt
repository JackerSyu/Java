Skip to content
This repository
Search
Pull requests
Issues
Marketplace
Explore
 @Paul1014
 Sign out
 Watch 1
  Star 3  Fork 2 tomlinNTUB/Java
 Code  Pull requests 0  Projects 0  Wiki Insights 
Branch: master Find file Copy pathJava/練習02b.txt
f45b1d2  13 days ago
@tomlinNTUB tomlinNTUB Update 練習02b.txt
1 contributor
RawBlameHistory     
88 lines (65 sloc)  2.32 KB
=================================
練習02b 字串的處理
=================================


import java.util.*;

class Main {
	public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);
        String s;
        
        try{
            System.out.print("請輸入測試字串:");
            s=scanner.next().trim();           
        }catch(Exception e){
            System.out.println("資料輸入錯誤!");
            return;
        }     

        //---------------------------
        // 你的程式加在以下的區間中
        //---------------------------
				
		
		
		
		
        //---------------------------
    }
}



判斷輸入的字串是否符合以下的條件:

(1)
字串長度為5, 除了第1碼外, 每一碼都比前一碼的值大.
例如:
13478       (正確)
abekm       (正確)
24538       (不正確)

import java.util.*;

class Main {
	public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);
        String s;
        
        try{
            System.out.print("請輸入測試字串:");
            s=scanner.next().trim();           
        }catch(Exception e){
            System.out.println("資料輸入錯誤!");
            return;
        }     
		    
		    int sum=s.length();
		    boolean result=false;
		    
		    if(sum>=5) {
		      for(int i=0;i<(sum-1);i++)  {
		        if(s.charAt(i)>=s.charAt(i+1)) {
		          result=false;
		          break;
		        } else {
		          result=true;
		        }
		      }
		    } else {
		      result=false;
		    }
		    if(result==true) {
		      System.out.println("正確");
		    } else {
		      System.out.println("不正確");
		    }
    }
}
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
=>
import java.util.*;

class Main {
	public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);
        String s;
        
        try{
            System.out.print("請輸入測試字串:");
            s=scanner.next().trim();           
        }catch(Exception e){
            System.out.println("資料輸入錯誤!");
            return;
        }     
		    
		int sum=s.length();
		boolean result=false;
		    
		if(sum>=5) {
		    for(int i=0;i<(sum-1);i++)  {
		        if(s.charAt(i)>=s.charAt(i+1)) {
		            result=false;
		            break;
		        } else {
		            result=true;
		        }
		    }
		} else {
		    result=false;
		}
		
		if(result) {
		    System.out.println("正確");
		} else {
		    System.out.println("不正確");
		}
    }
}   
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   *(3-8)程式撰寫其他建議.
		if(result==true) {
=>		if(result) {		
=======================================================================================


(2)
字串長度為至少為2, 除了第1碼外, 每一碼都大於或等於前一碼. 
例如:
111222336666778     (正確)
aaaeeegggkkm        (正確)
dddeeeaaa           (不正確)

import java.util.*;

class Main {
	public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);
        String s;
        
        try{
            System.out.print("請輸入測試字串:");
            s=scanner.next().trim();           
        }catch(Exception e){
            System.out.println("資料輸入錯誤!");
            return;
        }     
		    
		    int sum=s.length();
		    boolean result=false;
		    
		    if(sum>=2) {
		      for(int i=0;i<(sum-1);i++)  {
		        if(s.charAt(i)>s.charAt(i+1)) {
		          result=false;
		          break;
		        } else {
		          result=true;
		        }
		      }
		    } else {
		      result=false;
		    }
		    if(result==true) {
		      System.out.println("正確");
		    } else {
		      System.out.println("不正確");
		    }
    }
}
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


(3)
字串長度為至少為2, 除了第1碼外, 每一碼都大於或等於前一碼; 
但若有某一碼的值小於前一碼, 那麼其後的每一碼都小於或等於前一碼.
例如:
11112222233333                (正確)
111122224444666444433331111   (正確)
111222233332222111144444      (不正確)
4444333322221111              (不正確)

import java.util.*;

class Main {
	public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);
        String s;
        
        try{
            System.out.print("請輸入測試字串:");
            s=scanner.next().trim();           
        }catch(Exception e){
            System.out.println("資料輸入錯誤!");
            return;
        }     
		    
		    int sum=s.length();
		    boolean result=false;
		    
		    if(sum>=2) {
		      for(int i=0;i<(sum-1);i++) {
		       if(s.charAt(i+1)!=s.charAt(i)) {  //判斷相同字串的情況 ex:44332211
		        if(s.charAt(i)>s.charAt(i+1)) {  //以44332211為例,將字元切至4與3比較,發現這是不正確的輸入
		          result=false;
		          break;
		        }else {
  		        if(s.charAt(i+1)>=s.charAt(i)) {
  		         result=true;
  		        }else {
  		          for(int j=i;j<(sum-1);j++) {
  		            if(s.charAt(j)<s.charAt(j+1)) {
  		              result=false;
  		              break;
  		            }else {
  		              result=true;
  		            }
  		          }
  		        }
		        }
		       }
		      }
		    }
		   
		    if(result==true) {
		      System.out.println("正確");
		    } else {
		      System.out.println("不正確");
		    }
    }
}
=======================================================================================
(1)程式沒有明顯問題.
*(2)程式執行結果有誤.
=> 試試: "11122244443333222211111"

(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


(4)
字串內容至少有6碼, 其內容只有數字及小括號.
其中包括至少一組小括號,  
由左向右逐字查看輸入的字串, 如果查到1個右括號, 那麼在它之前應該至少有一個左括號.
字串中的左括號及右括號個數相同. 
例如:
(123)453                (正確)
(123)(456)78            (正確)
((123)(345))            (正確)
()()()                  (正確)
(())()                  (正確)
(123))(456)             (不正確)
)123))(456)             (不正確)
(123))(456)(            (不正確)
import java.util.*;

class Main {
	public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);
        String s;
        
        try{
            System.out.print("請輸入測試字串:");
            s=scanner.next().trim();           
        }catch(Exception e){
            System.out.println("資料輸入錯誤!");
            return;
        }     
		    
		    int sum=s.length();
		    int leftcnt=0;
		    int rightcnt=0;
		    boolean result=false;
		    
		    if(sum>=6) {
		      for(int i=0;i<(sum-1);i++) {
		        if(s.charAt(0)==')') { //開頭如果直接為')'就判斷為不正確input
		          result=false;
		          break;
		        }else {
		          if(s.charAt(i)=='(') {
		            leftcnt++;
		          }else if(s.charAt(i)==')') {
		            rightcnt++;
		          }
		        }
		        if(rightcnt==leftcnt) {
		          result=true;
		        }
		      }
		    }
		    
		    if(result==true) {
		      System.out.println("正確");
		    } else {
		      System.out.println("不正確");
		    }
    }
}
=======================================================================================
(1)程式沒有明顯問題.
*(2)程式執行結果有誤.
=> 試試: "(123))(456)"

(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


(5)
字串長度至少有3碼, 其內容只有數字及加減乘除4個運算符號.
判斷字串內容是否為一個正確的計算式(假設運算數字都是正整數).
例如:
5+3-44+2         (正確)
54+32-11*3       (正確)
42*/3+2          (不正確)
*9-3+-3          (不正確)
-32+4            (不正確)

import java.util.*;

class Main {
	public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);
        String s;
        
        try{
            System.out.print("請輸入測試字串:");
            s=scanner.next().trim();           
        }catch(Exception e){
            System.out.println("資料輸入錯誤!");
            return;
        }     
		    
		    int sum=s.length();
		    int leftcnt=0;
		    int rightcnt=0;
		    boolean result=false;
		    
		    if(sum>=3) {
		      if(s.charAt(0)>='*'&&s.charAt(0)<='/') { //判斷字首是否為符號
		        result=false;
		      }else if(s.charAt(sum-1)>='*'&&s.charAt(sum-1)<='/') { //判斷字尾是否為符號
		        result=false;
		      }else {
		        for(int i=0;i<(sum-1);i++) {
		          if(s.charAt(i)>='*'&&s.charAt(i)<='/') {
		            if(s.charAt(i+1)>='*'&&s.charAt(i+1)<='/') {
		              result=false;
		            }else {
		              result=true;
		            }
		          }
		        }
		      }
		    }
		    
		    if(result==true) {
		      System.out.println("正確");
		    } else {
		      System.out.println("不正確");
		    }
    }
}
=======================================================================================
(1)程式沒有明顯問題.
*(2)程式執行結果有誤.
=> 試試: "42*/3+2"

(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================