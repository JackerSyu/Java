
(1)
輸入身高(公尺)及體重(公斤), 計算輸入值的BMI. 
身體質量指數BMI = 體重(公斤) / 身高(公尺)的平方 
例如:
身高為1.7公尺, 體重為50公斤
BMI大約為17.30103....
請分別輸出:(a)保留小數位數
           (b)小數至第2位, 其後無條件捨去
           (c)小數至第2位, 其後無條件進位
           (d)小數至第2位, 其後四捨五入

		   import java.util.*;

class Main {
    public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);
        double height, weight;
        
        try{
            System.out.print("請輸入身高(公尺):");
            height=Double.parseDouble(scanner.next().trim());
            
            System.out.print("請輸入體重(公斤):");
            weight=Double.parseDouble(scanner.next().trim());           
        }catch(Exception e){
            System.out.println("資料輸入錯誤!");
            return;
        }     

				
		      Double bmi1 = weight / Math.pow(height,2);
		      Double bmi2 =Math.floor((weight / Math.pow(height,2))*100)/100;
		      Double bmi3 =Math.ceil((weight / Math.pow(height,2))*100)/100;
		      long bmi4 =Math.round((weight / Math.pow(height,2))*100);
		      
		      
		      
		      
		      System.out.println(bmi1);
		      System.out.println(bmi2);
		      System.out.println(bmi3);
		      System.out.println(bmi4/100.0);
        
    }
}

(a)17.301038062283737
(b)17.3
(c)17.31
(d)17.3
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
=>
import java.util.*;

class Main {
    public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);
        double height, weight;
        
        try{
            System.out.print("請輸入身高(公尺):");
            height=Double.parseDouble(scanner.next().trim());
            
            System.out.print("請輸入體重(公斤):");
            weight=Double.parseDouble(scanner.next().trim());           
        }catch(Exception e){
            System.out.println("資料輸入錯誤!");
            return;
        }     
				
        Double bmi1 = weight / Math.pow(height,2);
		Double bmi2 =Math.floor((weight / Math.pow(height,2))*100)/100;
		Double bmi3 =Math.ceil((weight / Math.pow(height,2))*100)/100;
		long bmi4 =Math.round((weight / Math.pow(height,2))*100);
			      
		System.out.println(bmi1);
		System.out.println(bmi2);
		System.out.println(bmi3);
		System.out.println(bmi4/100.0);        
    }
}   

   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   *(3-8)程式撰寫其他建議.
=> 能分辨 double(基本資料型別)及Double(類別)嗎?   
=======================================================================================


(2)
輸入向銀行的借款金額及預計還款的期數,
假設每月循環利率為12%, 以複利計算.
如果在預計還款的期數後一次還清本金及利息, 計算共要還多少錢?
例如:
向銀行借10000元, 一年後還(12期), 共應還38959.7599...元
請分別輸出:(a)保留小數位數
           (b)小數無條件捨去
           (c)小數無條件進位
           (d)四捨五入至整數位

		   import java.util.*;

class Main {
    public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);
        double money, time;
        
        try{
            System.out.print("請輸入金額:");
            money=Double.parseDouble(scanner.next().trim());
            
            System.out.print("請輸入期數(期):");
            time=Double.parseDouble(scanner.next().trim());           
        }catch(Exception e){
            System.out.println("資料輸入錯誤!");
            return;
        }     

      
				
	        double sum1 = money * Math.pow(1.12,time);
	        double sum2 = Math.floor(money * Math.pow(1.12,time));
	       double sum3 = Math.ceil(money * Math.pow(1.12,time));
		      double sum4 =Math.round(money * Math.pow(1.12,time));
		      
		      
		      
		      System.out.println(sum1);
		      System.out.println(sum2);
		      System.out.println(sum3);
		      System.out.println(sum4);
        
    }
}

		   
	(a)38959.75992546981
	(b)38959.0
	(c)38960.0
	(d)38960.0 
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================		   

		   
		   (3)
輸入在平面上A點的座標(x1, y1) 及 B點的座標(x2, y2)
計算兩點之間的距離.
例如:
A點=(10, 20), B點=(3, 30), 兩點間距離約為12.20655...
請分別輸出:(a)保留小數位數
           (b)小數至第2位, 其後無條件捨去
           (c)小數至第2位, 其後無條件進位
           (d)小數至第2位, 其後四捨五入
		   
		   import java.util.*;

class Main {
    public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);
        double x1, y1 ,x2 ,y2;
        
        try{
            System.out.print("請輸入A點的X座標:");
            x1=Double.parseDouble(scanner.next().trim());
            
            System.out.print("請輸入A點的Y座標:");
            y1=Double.parseDouble(scanner.next().trim()); 
            
            System.out.print("請輸入B點的X座標:");
            x2=Double.parseDouble(scanner.next().trim());
            
            System.out.print("請輸入B點的Y座標:");
            y2=Double.parseDouble(scanner.next().trim());
        }catch(Exception e){
            System.out.println("資料輸入錯誤!");
            return;
        }     

				
	     double length1 = Math.sqrt(Math.pow(x1-x2,2)+Math.pow(y1-y2,2));
	     double length2 = Math.floor(length1*100)/100;
	     double length3 = Math.ceil(length1*100)/100;
       long length4 = Math.round(length1*100);
		      
		      
		      
		      System.out.println(length1);
		      System.out.println(length2);
		      System.out.println(length3);
		     System.out.println(length4/100.0);
        
    }
}
(a)12.206555615733702
(b)12.2
(c)12.21
(d)12.21
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================

		   
		   

		   
(4)
假設美金與台幣的匯率是31.512.
請輸入台幣金額, 計算並輸出最多可換多少美金(只有整數)? 用多少台幣換得?  
例如:
輸入10000元台幣, 輸出317美金, 要用9990元台幣換得(小數無條件進位).

import java.util.*;

class Main {
    public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);
        double TW;
        
        try{
            System.out.print("請輸入台幣金額:");
            TW=Double.parseDouble(scanner.next().trim());
            
        
      
        }catch(Exception e){
            System.out.println("資料輸入錯誤!");
            return;
        }     

				
	     double US = Math.floor(TW / 31.512) ;
	     double sumTW =Math.ceil(US * 31.512) ;
	     
		      
		 //     System.out.println("輸入"+TW+"台幣"+",輸出"+sumUS+"美金,"+"需要"+sumTW+"元台幣換得");
		  System.out.println("可換美金"+US+"元");
		    System.out.println("要用新台幣"+(int)sumTW+"元");
    }
}

請輸入台幣金額: 10000
可換美金317.0元
要用新台幣9990元
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


(5)
假設一家餐廳使用購票機點餐, 付款後有必要會自動找零錢.
購票機內有足夠的50元, 10元, 5元 及 1元 銅板.
請輸入找錢的金額, 計算應找多少個50元/10元/5元及1元, 可以使找還銅板的數量最少.
例如:
輸入:84元 
輸出:
1個50元
3個10元
0個5元
4個1元
共找8個銅板

import java.util.*;

class Main {
    public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);
        double money;
        
        try{
            System.out.print("請輸入金額:");
            money=Double.parseDouble(scanner.next().trim());
            
        
      
        }catch(Exception e){
            System.out.println("資料輸入錯誤!");
            return;
        }     

	    double coin50 = money/50;
	    double coin10 = (money - 50*(int)coin50) / 10;
      double coin5  = (money - 50*(int)coin50 - 10*(int)coin10) /5;
	    double coin1  = money - 50*(int)coin50 - 10*(int)coin10 - 5*(int)coin5 ;
	     
	     int sum = (int)coin50 + (int)coin10 + (int)coin5 + (int)coin1 ;
	     System.out.println((int)coin50+"個50元");
	   System.out.println((int)coin10+"個10元");
	     System.out.println((int)coin5+"個5元");
	    System.out.println((int)coin1+"個1元");
	    System.out.println("總共找"+sum+"個銅板");
	     
		      
		 
    }
}
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   *(3-8)程式撰寫其他建議.
    
	double coin50 = money/50;
	double coin10 = (money - 50*(int)coin50) / 10;
	
=> 使用%(取餘數)功能.
    .
	.
		money=Integer.parseInteger(scanner.next().trim());
	.
    .	
    int coin50 = money/50;
	double coin10 = (money%50)/10;
	.
=======================================================================================
