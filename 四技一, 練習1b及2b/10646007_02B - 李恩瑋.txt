
修改好了，結果已正確，謝謝老師


import java.util.*;

class homework_02b {
	public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);
        String s;
        
        try{
            System.out.print("請輸入測試字串:");
            s=scanner.next().trim();           
        }catch(Exception e){
            System.out.println("資料輸入錯誤!");
            return;
        }     

        //---------------------------
        // 你的程式加在以下的區間中
        //---------------------------
		
(1)
字串長度為5, 除了第1碼外, 每一碼都比前一碼的值大.
例如:
13478       (正確)
abekm       (正確)
24538       (不正確)

        boolean ans1 = true;
        if(s.length() != 5){
            ans1 = false;
        }else{
            for(int i = 1 ; i < s.length() ; i = i + 1){
                if(s.charAt(i) <= s.charAt(i-1)){
                    ans1 = false;
                    break;
                }
            }
        }
	System.out.println("第一題結果：" + ans1);	
=======================================================================================
*(1)程式沒有明顯問題.
(2)程式執行結果有誤.
(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================

		
(2)
字串長度為至少為2, 除了第1碼外, 每一碼都大於或等於前一碼. 
例如:
111222336666778     (正確)
aaaeeegggkkm        (正確)
dddeeeaaa           (不正確)

	boolean ans2 = true;
        if(s.length() < 2){
            ans2 = false;
        }else{
            for(int i = 1 ; i < s.length() ; i = i + 1){
                if(s.charAt(i) < s.charAt(i-1)){
                    ans2 = false;
                    break;
                }
            }
        }
	System.out.println("第二題結果：" + ans2);
=======================================================================================
*(1)程式沒有明顯問題.
(2)程式執行結果有誤.
(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================

	
(3)
字串長度為至少為2, 除了第1碼外, 每一碼都大於或等於前一碼; 
但若有某一碼的值小於前一碼, 那麼其後的每一碼都小於或等於前一碼.
例如:
11112222233333                (正確)
111122224444666444433331111   (正確)
111222233332222111144444      (不正確)
4444333322221111              (不正確)

        boolean ans3 = true;
        boolean check3_up = false;
        boolean check3_down = false;
        if(s.length() < 2){
            ans3 = false;
        }else{
            for(int i = 1 ; i < s.length() ; i = i + 1){
                if(s.charAt(i) < s.charAt(i-1)){
                    if(check3_up){
                        check3_down = true;
                    }else{
                        ans3 = false;
                        break;
                    }
                }else if(s.charAt(i) > s.charAt(i-1)){
                    if(check3_down){
                        ans3 = false;
                        break;
                    }else{
                        check3_up = true;
                    }
                }
            }
        }
	System.out.println("第三題結果：" + ans3);
=======================================================================================
*(1)程式沒有明顯問題.
(2)程式執行結果有誤.
(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


(4)
字串內容至少有6碼, 其內容只有數字及小括號.
其中包括至少一組小括號,  
由左向右逐字查看輸入的字串, 如果查到1個右括號, 那麼在它之前應該至少有一個左括號.
字串中的左括號及右括號個數相同. 
例如:
(123)453                (正確)
(123)(456)78            (正確)
((123)(345))            (正確)
()()()                  (正確)
(())()                  (正確)
(123))(456)             (不正確)
)123))(456)             (不正確)
(123))(456)(            (不正確)

        boolean ans4 = true;
        int check4 = 0;
        if(s.length() < 6 || (s.contains("(") == false || s.contains(")"))){
            ans4 = false;
        }else{
            for(int i = 0 ; i < s.length() ; i = i + 1){
                if(s.charAt(i) == '('){
                    check4 = check4 + 1;
                }else if(s.charAt(i) == ')'){
                    if(check4 == 0){
                        ans4 = false;
                        break;
                    }else{
                        check4 = check4 - 1;
                    }
                }else if(s.charAt(i) < '0' || s.charAt(i) > '9'){
                    ans4 = false;
                    break;
                }
            }
        }
        System.out.println("第四題結果：" + ans4);
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   *(3-8)程式撰寫其他建議.
   if(s.length() < 6 || (s.contains("(") == false || s.contains(")"))){
=> if(s.length() < 6 || !s.contains("(")){  
=======================================================================================


(5)
字串長度至少有3碼, 其內容只有數字及加減乘除4個運算符號.
判斷字串內容是否為一個正確的計算式(假設運算數字都是正整數).
例如:
5+3-44+2         (正確)
54+32-11*3       (正確)
42*/3+2          (不正確)
*9-3+-3          (不正確)
-32+4            (不正確)

        boolean ans5 = true;
        int finalword = s.length()-1;
        ArrayList a = new ArrayList();
        a.add('+') ; a.add('-') ; a.add('*') ; a.add('/');
        if(s.length() < 3 || a.contains(s.charAt(0)) || a.contains(s.charAt(finalword))){
            ans5 = false;
        }else{
            for(int i = 0 ; i < s.length() ; i = i + 1){
                if(a.contains(s.charAt(i)) && a.contains(s.charAt(i+1))){
                    ans5 = false;
                    break;
                }
            }
        }
        System.out.println("第五題結果：" + ans5);
        //---------------------------
    }
}
=======================================================================================
(1)程式沒有明顯問題.
*(2)程式執行結果有誤.
for(int i = 0 ; i < s.length() ; i = i + 1){
    if(a.contains(s.charAt(i)) && a.contains(s.charAt(i+1))){
        ans5 = false;
        break;
    }
}

=> 如果最後一碼是+-*/其中之一, 
=> a.contains(s.charAt(i))會是true, 
=> 那時a.contains(s.charAt(i+1))的檢查會出錯, 沒有s.charAt(i+1)?

(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================