/*
(1)
輸入身高(公尺)及體重(公斤), 計算輸入值的BMI. 
身體質量指數BMI = 體重(公斤) / 身高(公尺)的平方 
例如:
身高為1.7公尺, 體重為50公斤
BMI大約為17.30103....
請分別輸出:(a)保留小數位數
           (b)小數至第2位, 其後無條件捨去
           (c)小數至第2位, 其後無條件進位
           (d)小數至第2位, 其後四捨五入  */
           
class Main {
    public static void main(String[] args) {
        
        Double h = 1.7;
        int w = 50;
        
        Double BMI = w / Math.pow(h,2);
        System.out.println(BMI);
        
        Double b = Math.floor(BMI*100)/100;
        System.out.println(b);
        
        Double c = Math.ceil(BMI*100)/100;
	    System.out.println(c);
        
        Double d = Math.round(BMI*100)/100.0;
        System.out.println(d);
    }
}
=======================================================================================
*(1)程式沒有明顯問題.
=> 可使用樣板程式, 身高/體重由使用者輸入.

(2)程式執行結果有誤.
(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


(2)
/*
輸入向銀行的借款金額及預計還款的期數,
假設每月循環利率為12%, 以複利計算.
如果在預計還款的期數後一次還清本金及利息, 計算共要還多少錢?
例如:
向銀行借10000元, 一年後還(12期), 共應還38959.7599...元
請分別輸出:(a)保留小數位數
           (b)小數無條件捨去
           (c)小數無條件進位
           (d)四捨五入至整數位 */
           
class Main {
    public static void main(String[] args) {
      
      int i = 10000;
      double end = i*Math.pow(1.12,12);
      System.out.println(end);
      
      int b =(int) Math.floor(end);
      System.out.println(b);
      
      int c = (int) Math.ceil(end);
      System.out.println(c);
      
      int d = (int) Math.round(end);
      System.out.println(d);
    }
}
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   *(3-8)程式撰寫其他建議.
   int d = (int) Math.round(end);
=> int d = Math.round(end);   
=======================================================================================


(3)
/*
輸入在平面上A點的座標(x1, y1) 及 B點的座標(x2, y2)
計算兩點之間的距離.
例如:
A點=(10, 20), B點=(3, 30), 兩點間距離約為12.20655...
請分別輸出:(a)保留小數位數
           (b)小數至第2位, 其後無條件捨去
           (c)小數至第2位, 其後無條件進位
           (d)小數至第2位, 其後四捨五入 */
           
  class Main {
    public static void main(String[] args) {
     
     int x1,y1,x2,y2 ;
     x1 = 10 ; y1 = 20 ; x2 = 3 ; y2 = 30 ;
     
     int x3 = x1-x2;
     int y3 = y1-y2; 
     
     int x = Math.abs(x3);
     int y = Math.abs(y3);
     //System.out.println(x);
     //System.out.println(y);
     
     double a = Math.sqrt(Math.pow(x,2)+Math.pow(y,2));  
     System.out.println(a);
     
     double b = Math.floor(a*100)/100;
     System.out.println(b);
     
     double c = Math.ceil(a*100)/100;
     System.out.println(c);
     
     double d = Math.round(a*100)/100.0;
     System.out.println(d);
    }
}
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


(4)
/*
假設美金與台幣的匯率是31.512
請輸入台幣金額, 計算並輸出最多可換多少美金(只有整數)? 用多少台幣換得?  
例如:
輸入10000元台幣, 輸出317美金, 要用9990元台幣換得(小數無條件進位) */
           
  class Main {
    public static void main(String[] args) {
    
    int money = 10000;
    
    int a =(int) Math.floor(money/31.512);
    System.out.println(a);
    
    int end =(int) Math.ceil(a*31.512);
    System.out.println(end);
    }
}
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
=>
class Main {
    public static void main(String[] args) {    
        int money = 10000;
    
        int a =(int) Math.floor(money/31.512);
        System.out.println(a);
    
        int end =(int) Math.ceil(a*31.512);
        System.out.println(end);
    }
}   
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


(5)
/*
假設一家餐廳使用購票機點餐, 付款後有必要會自動找零錢.
購票機內有足夠的50元, 10元, 5元 及 1元 銅板.
請輸入找錢的金額, 計算應找多少個50元/10元/5元及1元, 可以使找還銅板的數量最少.
例如:
輸入:84元 
輸出:
1個50元
3個10元
0個5元
4個1元
共找8個銅板 */
           
  class Main {
    public static void main(String[] args) {
    
    int in = 84;
    
    int a50 =(int) Math.floor(in/50);
    in = in - 50*a50 ;
    
    int a10 =(int) Math.floor(in/10);
    in = in - 10*a10;
    
    int a5 =(int) Math.floor(in/5);
    in = in -5*a5;
    
    int a1 = in;
    
    int total = a50+a10+a5+a1;
    
    System.out.println(a50+"個50元");
    System.out.println(a10+"個10元");
    System.out.println(a5+"個5元");
    System.out.println(a1+"個1元");
    System.out.println("共找"+total+"個銅板");

    }
}
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   *(3-8)程式撰寫其他建議.
       in = in - 50*a50 ;
   => 善用%(取餘數)功能.	   
   =>  in = in%50 ;
=======================================================================================