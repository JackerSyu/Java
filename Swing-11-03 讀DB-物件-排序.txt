=========================================================================
讀入MySQL資料庫中資料, 加入物件, 排序, 逐一加入JTextArea物件中.
=========================================================================

   <專案>
     |
     |__ <Source Packages>
     |         |  
     |         |__ <default package>
     |         |       |__ Main.java (主程式)
     |         |
     |         |__ <com.abc>
     |         |       |__ DB.java       (負責傳回資料庫連線物件)
     |         |       |__ Student.java  (學生物件)     
     |         |
     |         |__ <com.abc.ui>
     |                 |__ MyJFrame.java (畫面)
     |
     |
     |__ <Libraries>
           |__ MySQL JDBC Driver - mysql-connector....jar  (在Libraries上按右鍵, 選擇此jar檔, 加入其中)
           |__ JDK 1.8(Default)  (原有)

	
     
  [JFrame] (畫面)
    |
    |__ jMenuBar[JMenuBar]  
    |          |__ openMenu[JMenu] (開檔)
    |          |__ exitMenu[JMenu] 
    |
    |__ jScrollPane[JScrollPane] 
               |__ jTable[JTable] (表格)
			  
========================================================================= 



---------------------------------------------------------
測試的資料庫在本網頁<db>中可下載
---------------------------------------------------------
student(資料庫)
   |
   |__ student(資料表)
          |__ stuNo
          |__ stuName
          |__ gender
          |__ ...          

---------------------------------------------------------




//===============================================================
(1)DB.java, 負責取回資料庫資料
//===============================================================
package com.abc;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class DB{
    //-----------------------------------------------------
    //取出並回傳學生資料
    //-----------------------------------------------------    
    public static Connection getConnection(){
        try{   
            //載入mysql驅動程式
            Class.forName("com.mysql.jdbc.Driver");
            
            //產生一個連到資料庫的連結物件
            Connection connection=DriverManager.getConnection("jdbc:mysql://localhost:3306/student", "root", "mysql");             
         
            //回傳連結物件
            return connection;
        }catch(ClassNotFoundException | SQLException e){  
            //回傳空值
            return null;
        }
    }
    //-----------------------------------------------------    
} 



========================================================================= 
(2)Student.java
========================================================================= 
package com.abc;

public class Student implements Comparable<Student>{
    //成員
    private String stuNo;
    private String stuName;
    private int chi;
    private int eng;
    private int mat;
    private int soc;
    private int nat;
    private int lec;
    
    //建構元(1)
    public Student(String stuNo, String stuName, int chi, int eng, int mat, int soc, int nat, int lec){
        this.stuNo=stuNo;
        this.stuName=stuName;
        this.chi=chi;
        this.eng=eng;
        this.mat=mat;
        this.soc=soc;
        this.nat=nat;
        this.lec=lec;
    }
    
    //建構元(2)
    public Student(){}
    
    //setters
    public void setStuNo(String stuNo){this.stuNo=stuNo;}
    public void setStuName(String stuName){this.stuName=stuName;}
    public void setChi(int chi){this.chi=chi;}
    public void setEng(int eng){this.eng=eng;}
    public void setMat(int mat){this.mat=mat;}
    public void setSoc(int soc){this.soc=soc;}
    public void setNat(int nat){this.nat=nat;}
    public void setLec(int lec){this.lec=lec;}
    
    //getters
    public String getStuNo(){return this.stuNo;}
    public String getStuName(){return this.stuName;}
    public int getChi(){return this.chi;}
    public int getEng(){return this.eng;}
    public int getMat(){return this.mat;}
    public int getSoc(){return this.soc;}
    public int getNat(){return this.nat;}
    public int getLec(){return this.lec;}
    
    //------------------------------------------------------------------
    //計算總分
    //------------------------------------------------------------------
    public double total(){
        return chi*1 + eng*2 + mat*2 + soc*1 + nat*1 + lec*1;        
    }
    //------------------------------------------------------------------ 


    //------------------------------------------------------------------
    //實作Comparable介面的方法
    //------------------------------------------------------------------
    @Override
    public int compareTo(Student stu){        
        return (int)(this.total()*10 - stu.total()*10);  //總分由小到大排序
    }
    //------------------------------------------------------------------    
}



========================================================================= 
(3)在MenuBar中的Open被點擊時	
========================================================================= 
//--------------------------------------------- 
//取得資料庫中資料
//--------------------------------------------- 
try{
    //取得資料庫連線物件
    Connection connection = DB.getConnection();

    //==========================================
    //(1)產生一個SQL命令
    //==========================================
    PreparedStatement stmt = connection.prepareStatement("select a.stuNo, a.stuName, b.couNo, b.score from student a, score b where a.stuNo = b.stuNo order by a.stuNo, b.couNo");
            
    //執行SQL命令, 取出資料
    ResultSet rs=stmt.executeQuery();       
           
    //如果回傳空資料集        
    if(!rs.next()){
        JOptionPane.showMessageDialog(this, "無符合資料!");
        return;
    }
    
    //清除原有資料
    DefaultTableModel model = (DefaultTableModel) jTable.getModel();
    model.setRowCount(0); 

    //=======================================================
    //(2)建立一個存放物件的arrayList
    //=======================================================
    ArrayList<Student> arrayList = new ArrayList();
    //=======================================================
        
    //將資料集中的內容一筆一筆取出       
    do{
        //=======================================================================================
        //(3)產生一個物件, 將它加入arrayList中
        //=======================================================================================    
        //第1列
        String stuNo=rs.getString("stuNo");  
        String stuName=rs.getString("stuName");        
        int chi = rs.getInt("score");
        
        //第2列
        rs.next();
        int eng = rs.getInt("score");
        
        //第3列
        rs.next();
        int mat = rs.getInt("score");
        
        //第4列
        rs.next();
        int soc = rs.getInt("score");
        
        //第5列
        rs.next();
        int nat = rs.getInt("score");
        
        //第6列
        rs.next();
        int lec = rs.getInt("score");

        arrayList.add(new Student(stuNo, stuName, chi, eng, mat, soc, nat, lec));          
        //=======================================================================================              
    }while(rs.next());	
    
    //====================================
    //(4)排序 
    //====================================
    Collections.sort(arrayList);
    //====================================
                
                
    //===============================================================
    //(5)逐個取出arrayList中的資料, 加入表格中顯示
    //===============================================================
    for(int i=0; i<arrayList.size(); i++){
        //取出arrayList中的第i個Student物件
        Student s = arrayList.get(i);

        //將取出的檔位產生一個陣列
        Object[] row = {s.getStuNo(), s.getStuName(), s.total()};

        //將產生的陣列加入表格的資料物件中
        model.addRow(row);
    }
    //===============================================================       
}catch(SQLException e){
    JOptionPane.showMessageDialog(this, "資料取得失敗!");
}
//------------------------------------------


