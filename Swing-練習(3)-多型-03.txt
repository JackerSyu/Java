很多雙薪家庭的父母都不太會做菜也沒時間準備晚餐, 但也不想天天吃不健康的食物.
考慮你自己有烹飪的專業, 也許可以提供健康的菜餚給現代忙碌的家庭.

現實的問題似乎是個阻礙, 沒有店面也沒有資金, 應該如何掌握這個商機, 創造一個獲利模式?

也許可以租一個小坪數廚房工作室, 並用FB作為開始運作的宣傳工具.
在每次烹飪後, 你將料理過程的照片作成食譜放在FB, 並邀請大眾試食, 由試吃者給你料理的建議.

理想的狀況是一段時間後可以經營出一小群鐵粉, 工作室就是他們的晚餐廚房.

每天上傳明天提供的4道菜, 由粉絲預定, 然後在當天白天採購食材, 料理, 等粉絲下班後來拿預定的菜餚.
粉絲們也很開心, 他們只要用電鍋煮飯, 加煮一兩樣簡單的菜色, 就可以顧到全家人的營養均衡. 
假日時, 你的廚房工作室變成廚藝教室, 教有興趣的粉絲也可以自行烹飪好吃的料理.

開始進行訂餐程式開發!


========================
1. 專案架構
========================

  <專案>
    |
    |__ <default package>
    |         |__ Main.java (主程式)
    |
    |__ <com.abc>
    |         |__ Menu.java          (內存菜色及價格的靜態成員)    
    |         |__ Order.java         (父親, 訂餐類別, 抽象類別)
    |         |__ RegularOrder.java  (兒子, 一般訂餐類別)    
    |         |__ SpecialOrder.java  (兒子, 特別訂餐類別)       
    |
    |__ <com.abc.ui>
              |__ MyJFrame.java (畫面)


			  
  [JFrame] (畫面)
    |
    |__ jMenuBar[JMenuBar]
    |         |__ openMenu[JMenu] (開檔)
    |         |__ exitMenu[JMenu]
    |
    |__ jScrollPane[JScrollPane]
              |__ jTable[JTable] (表格)
              
              
              

=============================
2. 輸入檔: Order.CSV
內容為:
(1)類型
(2)客戶電話
(3)客戶姓名
(3)第1道菜訂購份數 
(4)第2道菜訂購份數 
(5)第3道菜訂購份數 
(6)第4道菜訂購份數 
(7*)分量
(8*)是否加辣

(7*)及(8*)僅用於特別訂單.
=============================



=====================
3. 輸出:
=====================
-------------------------------------------------------------------------------------------------------------------------------
類型       電話              姓名      餐點1       數量   餐點2     數量   餐點3     數量   餐點4     數量  總金額   備註
-------------------------------------------------------------------------------------------------------------------------------
一般訂單    0911-111-111     王小明     紅燒獅子頭  1      宮保雞丁  2      雪菜肉絲  3      炒高麗菜  4     910    
   .          .               .           .       .         .     .         .      .         .     .      .          
   .          .               .           .       .         .     .         .      .         .     .      .          
   .          .               .           .       .         .     .         .      .         .     .      .          
特別訂單    0911-111-222     陳小華     紅燒獅子頭  1      宮保雞丁  2      雪菜肉絲  3      炒高麗菜  4     1365    加大1.5-加辣
   .          .               .           .       .         .     .         .      .         .     .      .         . 
   .          .               .           .       .         .     .         .      .         .     .      .         . 
   .          .               .           .       .         .     .         .      .         .     .      .         . 
-------------------------------------------------------------------------------------------------------------------------------  



=====================
4. 程式
=====================
//-----------------------------------------------
// 每天提供的菜色及單價, 每天更新內容(已完成)
//-----------------------------------------------
package com.abc;

public class Menu{
    public static String item01 = "紅燒獅子頭";
    public static int price01 = 140;
	
    public static String item02 = "宮保雞丁";
    public static int price02 = 110;
	
    public static String item03 = "雪菜肉絲";
    public static int price03 = 90;

    public static String item04 = "炒高麗菜";
    public static int price04 = 70;
}



//------------------------------------------------------
// 訂餐類別 (父親, 抽象類別, 已完成)
//------------------------------------------------------
package com.abc;

public abstract class Order{
    private String tel;     //客戶電話
    private String name;    //客戶姓名
    private int foodAmt01;  //第1道菜訂購份數 
    private int foodAmt02;  //第2道菜訂購份數 
    private int foodAmt03;  //第3道菜訂購份數 
    private int foodAmt04;  //第4道菜訂購份數 	
	
    //建構元(1)
    public Order(String tel, String name, int foodAmt01, int foodAmt02, int foodAmt03, int foodAmt04){
        this.tel=tel;
        this.name=name;
        this.foodAmt01=foodAmt01;
        this.foodAmt02=foodAmt02;
        this.foodAmt03=foodAmt03;
        this.foodAmt04=foodAmt04;		
    }

    //建構元(2)    
    public Order(){}
	
    //setter
    public void setTel(String tel){this.tel=tel;}
    public void setName(String name){this.name=name;}
    public void setFoodAmt01(int foodAmt01){this.foodAmt01=foodAmt01;}
    public void setFoodAmt02(int foodAmt02){this.foodAmt02=foodAmt02;}
    public void setFoodAmt03(int foodAmt03){this.foodAmt03=foodAmt03;}
    public void setFoodAmt04(int foodAmt04){this.foodAmt04=foodAmt04;}
    
    //getter
    public String getTel(){return this.tel;}
    public String getName(){return this.name;}
    public int getFoodAmt01(){return this.foodAmt01;}
    public int getFoodAmt02(){return this.foodAmt02;}
    public int getFoodAmt03(){return this.foodAmt03;}
    public int getFoodAmt04(){return this.foodAmt04;}

    //--------------------------------------
    //備註, 抽象方法
    //--------------------------------------     
    abstract public int totalPrice();
    abstract public String remarks();
    //--------------------------------------     
}




//------------------------------------------------------
// 一般訂餐類別 (兒子, 繼承訂餐類別, 未完成)
//------------------------------------------------------
package com.abc;

public class RegularOrder extends Order{  
    //建構元(1)
    //建構元(2)
    
    //----------------------------------
    //總金額
    //---------------------------------- 
    @Override
    public int totalPrice(){
        //內容自行完成
    }
    //----------------------------------    
    
    //----------------------------------
    //備註
    //---------------------------------- 
    @Override
    public String remarks(){
        //內容自行完成
    }
    //----------------------------------    
}




//------------------------------------------------------
// 特別訂餐類別 (兒子, 繼承訂餐類別, 未完成)
//------------------------------------------------------
package com.abc;

public class SpecialOrder extends Order{
    private double size;    //菜餚份量: 0.8(小份); 1.0(一般); 1.5(加大); 2.0(最大)
    private boolean spicy;  //true(加辣); false(不加辣)
    
    //建構元(1)
    //建構元(2)

    //setter
    //getter
    
    //----------------------------------
    //總金額
    //---------------------------------- 
    @Override
    public int totalPrice(){
        //內容自行完成
    }
    //----------------------------------    
    
    //----------------------------------
    //備註
    //---------------------------------- 
    @Override
    public String remarks(){
        //內容自行完成
    }
    //----------------------------------    
}





=====================
5. 說明:
=====================
(1)「一般訂餐類別」的訂餐, 假設點餐數量分別是1份, 2份, 3份 及 4份: 
 
紅燒獅子頭金額 = 140*1 = 140
宮保雞丁金額 = 110*2 = 220
雪菜肉絲金額 = 90*3 = 270
炒高麗菜金額 = 70*4 = 280

總金額 = 140+220+270+280 = 910元
備註:空白


(2)「特別訂餐類別」的訂餐, 假設點餐數量分別是1份, 2份, 3份 及 4份. 並且加大1.5, 不加辣: 
 
紅燒獅子頭金額 = 140*1 = 140
宮保雞丁金額 = 110*2 = 220
雪菜肉絲金額 = 90*3 = 270
炒高麗菜金額 = 70*4 = 280

總金額 = (140+220+270+280)*1.5 = 1,365元
備註:加大1.5, 不加辣

*小數捨去
*加辣不加價


