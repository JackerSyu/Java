=================================
J17
=================================

(1)
import java.util.ArrayList;

//-------------------------------------------------------
//一個「應付款介面」
interface Payable{
    public String item();	
    public int payment();
}


//-------------------------------------------------------
//「租車類別」完成「應付款介面」的功能
class CarRental implements Payable{
    private String type;    //車型
    private int rentDays;   //租用天數

    //建構元(1)
    public CarRental(String type, int rentDays){
        this.type=type;
        this.rentDays=rentDays;
    }

    //建構元(2)
    public CarRental(){
        this.type=null;
        this.rentDays=0;
    }

    //setter
    public void setType(String type){this.type=type;}
    public String getType(){return type;}

    //getter
    public void setRentDays(int rentDays){this.rentDays=rentDays;}
    public int getRentDays(){return rentDays;}	
    
    //實作介面的方法	
    @Override
    public String item(){
        return "租車費";    	
    }    
    
    //實作介面的方法	
    @Override	
    public int payment(){
        int price=0;
		
        if(type.equals("3000cc")){
            price=4000;
        }else if(type.equals("2400cc")){
            price=2500;
        }else if(type.equals("1800cc")){
            price=2000;
        }else{
            price=1500;
        }
				
        return price*rentDays;
    }
}


//-------------------------------------------------------
//「租房類別」完成「應付款介面」的功能
class RoomRental implements Payable{
    private boolean specialDiscount;   //是否折扣房型

    //建構元(1)
    public RoomRental(boolean specialDiscount){
        this.specialDiscount=specialDiscount;
    }    

    //建構元(2)
    public RoomRental(){
        this.specialDiscount=false;
    }
	
    //setter	
    public void setSpecialDiscount(boolean specialDiscount){
        this.specialDiscount=specialDiscount;
    }
	
    //getter	
    public boolean getSpeicalDiscount(){return specialDiscount;}

    //實作介面的方法	
    @Override
    public String item(){
        return "房租費";    	
    }  
    
    //實作介面的方法	
    @Override	
    public int payment(){
        int price;
		
        if(specialDiscount){
            price=2400;
        }else{
            price=3000;
        }
				
        return price;
    }
}


//-------------------------------------------------------
//主要流程類別
class Main {
    private static int total=0;
	
    public static void main(String[] args) {
        //一個可放「應付款物件」的串列清單
        ArrayList payList = new ArrayList();
        
        //將多個「租車物件」物件加入串列清單中
        payList.add(new CarRental("3000cc", 3));
        payList.add(new CarRental("2400cc", 2));
        payList.add(new CarRental("1800cc", 1));
        payList.add(new CarRental("1500cc", 2));

        //將多個「租房物件」物件加入串列清單中
        payList.add(new RoomRental(true));
        payList.add(new RoomRental(false));
        payList.add(new RoomRental(true));
      
        
        //呼叫印出付款明細方法
        for(int i=0; i<payList.size(); i++){
            printPayment((Payable)payList.get(i));
        }            
        
        //印出合計金額	
        System.out.println("合計:" + total + "元");
        System.out.println("================");
    }
	
    //印出付款明細
    public static void printPayment(Payable payable){
        total+=payable.payment(); 	
        System.out.println(payable.item() + ":" + payable.payment() + "元"); 
        System.out.println("----------------");        
    }
}
