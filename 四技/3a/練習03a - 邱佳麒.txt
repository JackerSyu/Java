(1)請輸出以下:
   (a)文章共有多少字母, 標點符號及空白(全部總和)?
   (b)內容都轉成大寫.
   (c)內容都轉成小寫.



class Main {
	public static void main(String[] args) {
        //小s的內容是一篇文章
    	String s= "From the red fox to the fennec fox, foxes look adorable. Because of this, people are sometimes tempted to keep them as pets. However, those who have tried have struggled. Unlike dogs and cats, the different species of fox have not been domesticated. Domestication only happens over a long period of time through selective breeding. Cats and dogs were domesticated by humans thousands of years ago to be pets and companions. Sheep, goats and other animals were domesticated for food. But there may be more to it than that. People who have tried to simply tame individual foxes often speak of a stubborn wildness that is impossible to get rid of. This suggests that foxes harder to tame than other animals. However, one extraordinary experiment has found a way to domesticate foxes. This one study could help us understand how our ancestors domesticated other animals, and indeed what domestication is.";

        System.out.println(s);	
        //---------------------------
        // (a)文章共有多少字母, 標點符號及空白(全部總和)?
        System.out.println("文章中字母數為"+s.length());
        
        //(b)內容都轉成大寫.
        System.out.println(s.toUpperCase());
        
        //(c)內容都轉成小寫.
        System.out.println(s.toLowerCase());
        
        //---------------------------
    }
}
=======================================================================================
*(1)程式沒有明顯問題.
(2)程式執行結果有誤.
(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================




(2)請輸出以下:
   (a)文章中共有多少個空白? 
   (b)文章中共有多少個標點符號?

class Main {
	public static void main(String[] args) {
        //小s的內容是一篇文章
    	String s= "From the red fox to the fennec fox, foxes look adorable. Because of this, people are sometimes tempted to keep them as pets. However, those who have tried have struggled. Unlike dogs and cats, the different species of fox have not been domesticated. Domestication only happens over a long period of time through selective breeding. Cats and dogs were domesticated by humans thousands of years ago to be pets and companions. Sheep, goats and other animals were domesticated for food. But there may be more to it than that. People who have tried to simply tame individual foxes often speak of a stubborn wildness that is impossible to get rid of. This suggests that foxes harder to tame than other animals. However, one extraordinary experiment has found a way to domesticate foxes. This one study could help us understand how our ancestors domesticated other animals, and indeed what domestication is.";

        System.out.println(s);	
        //---------------------------
        //(a)文章中共有多少個空白? 
          (b)文章中共有多少個標點符號?
        int blank=0;
        int punctuation=0;
        char[] ch=s.toCharArray();  
        for(int i=0;i<s.length();i++){
          if (ch[i]==' '){
            blank++;
          }else if(ch[i]=='.'||ch[i]==','){
            punctuation++;
          }
        }
        System.out.println("空白個數為："+blank);
        System.out.println("標點符號個數為："+punctuation);
  

        
        //---------------------------
    }
}
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   => 請多注意內縮一致.    
   => 多注意避免無意義的空行.   
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================




(3)將文章反向輸出, 如 .si noitacitsemod .... eht morF

class Main {
	public static void main(String[] args) {
        //小s的內容是一篇文章
    	String s= "From the red fox to the fennec fox, foxes look adorable. Because of this, people are sometimes tempted to keep them as pets. However, those who have tried have struggled. Unlike dogs and cats, the different species of fox have not been domesticated. Domestication only happens over a long period of time through selective breeding. Cats and dogs were domesticated by humans thousands of years ago to be pets and companions. Sheep, goats and other animals were domesticated for food. But there may be more to it than that. People who have tried to simply tame individual foxes often speak of a stubborn wildness that is impossible to get rid of. This suggests that foxes harder to tame than other animals. However, one extraordinary experiment has found a way to domesticate foxes. This one study could help us understand how our ancestors domesticated other animals, and indeed what domestication is.";

        System.out.println(s);	
        //---------------------------
        // (3)將文章反向輸出, 如 .si noitacitsemod .... eht morF
        //---------------------------
        char[] ch =s.toCharArray();
        String inversion = "";
        for(int i = ch.length - 1; i >= 0; i--) {
            inversion += ch[i];
        }
        System.out.println(inversion);
        //---------------------------
    }
}
=======================================================================================
*(1)程式沒有明顯問題.
(2)程式執行結果有誤.
(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================






(4)文章中, 總共有多少個英文字? 如 "From the red fox" 共有4個英文字, 重覆出現請重覆累計.

class Main {
	public static void main(String[] args) {
        //小s的內容是一篇文章
    	String s= "From the red fox to the fennec fox, foxes look adorable. Because of this, people are sometimes tempted to keep them as pets. However, those who have tried have struggled. Unlike dogs and cats, the different species of fox have not been domesticated. Domestication only happens over a long period of time through selective breeding. Cats and dogs were domesticated by humans thousands of years ago to be pets and companions. Sheep, goats and other animals were domesticated for food. But there may be more to it than that. People who have tried to simply tame individual foxes often speak of a stubborn wildness that is impossible to get rid of. This suggests that foxes harder to tame than other animals. However, one extraordinary experiment has found a way to domesticate foxes. This one study could help us understand how our ancestors domesticated other animals, and indeed what domestication is.";

        System.out.println(s);	
        //---------------------------
        // (4)文章中, 總共有多少個英文字? 如 "From the red fox" 共有4個英文字, 重覆出現請重覆累計.
        //---------------------------
        System.out.println(s.split(“\\b”).length);
        //---------------------------
    }
}
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   *(3-8)程式撰寫其他建議.
   => 先處理標點符號比較好. 否則如 "fox," 及 "fox" 會被視為不同單字.
=======================================================================================

