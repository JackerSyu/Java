=================================
練習03a 英文文章的處理
=================================

class Main {
	public static void main(String[] args) {
        //小s的內容是一篇文章
    	String s= "From the red fox to the fennec fox, foxes look adorable. Because of this, people are sometimes tempted to keep them as pets. However, those who have tried have struggled. Unlike dogs and cats, the different species of fox have not been domesticated. Domestication only happens over a long period of time through selective breeding. Cats and dogs were domesticated by humans thousands of years ago to be pets and companions. Sheep, goats and other animals were domesticated for food. But there may be more to it than that. People who have tried to simply tame individual foxes often speak of a stubborn wildness that is impossible to get rid of. This suggests that foxes harder to tame than other animals. However, one extraordinary experiment has found a way to domesticate foxes. This one study could help us understand how our ancestors domesticated other animals, and indeed what domestication is.";

        System.out.println(s);	
        System.out.println();
		
        //---------------------------
        // 你的程式加在以下的區間中
        //---------------------------
				
		
		
		
		
        //---------------------------
    }
}


以下每個問題各自獨立, 
練習時請不要寫在同一個程式中.

(1)請輸出以下:
   (a)文章共有多少字母, 標點符號及空白(全部總和)?
   (b)內容都轉成大寫.
   (c)內容都轉成小寫.
class Main {
    public static void main(String[] args) {
      //小s的內容是一篇文章
      String s= "From the red fox to the fennec fox, foxes look adorable. Because of this, people are sometimes tempted to keep them as pets. However, those who have tried have struggled. Unlike dogs and cats, the different species of fox have not been domesticated. Domestication only happens over a long period of time through selective breeding. Cats and dogs were domesticated by humans thousands of years ago to be pets and companions. Sheep, goats and other animals were domesticated for food. But there may be more to it than that. People who have tried to simply tame individual foxes often speak of a stubborn wildness that is impossible to get rid of. This suggests that foxes harder to tame than other animals. However, one extraordinary experiment has found a way to domesticate foxes. This one study could help us understand how our ancestors domesticated other animals, and indeed what domestication is.";
      
      System.out.println(s);	
      System.out.println();
      
      //---------------------------
      // 你的程式加在以下的區間中
      //---------------------------
      System.out.println("(a)文章共有多少字母, 標點符號及空白(全部總和)\n共有" + s.length() + "個\n");
      int alphabet=0, space=0;
      String sU="", sL="";
      for(int i=0; i<s.length(); i++){
      	  sU += s.substring(i,i+1).toUpperCase();
      	  sL += s.substring(i,i+1).toLowerCase();
      }
      System.out.println("(b)內容都轉成大寫\n" + sU + "\n");
      System.out.println("(c)內容都轉成小寫\n" + sL);
      //---------------------------
    }
}
=======================================================================================
*(1)程式沒有明顯問題.
(2)程式執行結果有誤.
(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   *(3-8)程式撰寫其他建議.
      //---------------------------
      // 你的程式加在以下的區間中
      //---------------------------
      System.out.println("(a)文章共有多少字母, 標點符號及空白(全部總和)\n共有" + s.length() + "個\n");
      int alphabet=0, space=0;
      String sU="", sL="";
      for(int i=0; i<s.length(); i++){
      	  sU += s.substring(i,i+1).toUpperCase();
      	  sL += s.substring(i,i+1).toLowerCase();
      }
      System.out.println("(b)內容都轉成大寫\n" + sU + "\n");
      System.out.println("(c)內容都轉成小寫\n" + sL);
      //---------------------------

=>
      System.out.println("(b)內容都轉成大寫\n" + s.toUpperCase() + "\n");
      System.out.println("(c)內容都轉成小寫\n" + s.toLowerCase());
=======================================================================================


(2)請輸出以下:
   (a)文章中共有多少個空白?   
   (b)文章中共有多少個標點符號?
class Main {
    public static void main(String[] args) {
      //小s的內容是一篇文章
      String s= "From the red fox to the fennec fox, foxes look adorable. Because of this, people are sometimes tempted to keep them as pets. However, those who have tried have struggled. Unlike dogs and cats, the different species of fox have not been domesticated. Domestication only happens over a long period of time through selective breeding. Cats and dogs were domesticated by humans thousands of years ago to be pets and companions. Sheep, goats and other animals were domesticated for food. But there may be more to it than that. People who have tried to simply tame individual foxes often speak of a stubborn wildness that is impossible to get rid of. This suggests that foxes harder to tame than other animals. However, one extraordinary experiment has found a way to domesticate foxes. This one study could help us understand how our ancestors domesticated other animals, and indeed what domestication is.";
      
      System.out.println(s);	
      System.out.println();
      
      //---------------------------
      // 你的程式加在以下的區間中
      //---------------------------
      int alphabet=0, space=0;
      for(int i=0; i<s.length(); i++){
          //System.out.println(i + " : " + s.charAt(i));  //字串內容以單一個字元逐一印出
      	  if(Character.isUpperCase(s.charAt(i)) || Character.isLowerCase(s.charAt(i)))  alphabet+=1;
      	  if(s.substring(i,i+1).equals(" "))  space+=1;
      }
      //System.out.println(alphabet + "個字母");
      System.out.println("(a)文章中共有多少個空白?\n" + space + "個空白\n");
      System.out.println("(b)文章中共有多少個標點符號?\n" + (s.length()-alphabet-space) + "個標點符號");
      //---------------------------
    }
}
=======================================================================================
*(1)程式沒有明顯問題.
(2)程式執行結果有誤.
(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   *(3-8)程式撰寫其他建議.
   if(Character.isUpperCase(s.charAt(i)) || Character.isLowerCase(s.charAt(i)))  alphabet+=1;   
=> 
   有些非標點符號也沒有大小寫之分, 如@, $, %...等等.
   
        //列舉標點符號		
		String punctuation=".,;?!";
		int marks=0;
		
		for (int i = 0; i < s.length();i++){
		    for(int j=0; j<punctuation.length(); j++){
			   if (s.charAt(i)==punctuation.charAt(j)){
				  marks++;
			   }	  
			}
		}
		  
		System.out.println(marks);	  
   
=======================================================================================


(3)將文章反向輸出, 如 .si noitacitsemod .... eht morF
class Main {
    public static void main(String[] args) {
      //小s的內容是一篇文章
      String s= "From the red fox to the fennec fox, foxes look adorable. Because of this, people are sometimes tempted to keep them as pets. However, those who have tried have struggled. Unlike dogs and cats, the different species of fox have not been domesticated. Domestication only happens over a long period of time through selective breeding. Cats and dogs were domesticated by humans thousands of years ago to be pets and companions. Sheep, goats and other animals were domesticated for food. But there may be more to it than that. People who have tried to simply tame individual foxes often speak of a stubborn wildness that is impossible to get rid of. This suggests that foxes harder to tame than other animals. However, one extraordinary experiment has found a way to domesticate foxes. This one study could help us understand how our ancestors domesticated other animals, and indeed what domestication is.";
      
      System.out.println(s);	
      System.out.println();
      
      //---------------------------
      // 你的程式加在以下的區間中
      //---------------------------
      System.out.println("文章反向輸出");
      for(int i=(s.length()-1); i>=0; i--){
      	  System.out.print(s.charAt(i));
      }
      //---------------------------
    }
}
=======================================================================================
*(1)程式沒有明顯問題.
(2)程式執行結果有誤.
(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


(4)文章中, 總共有多少個英文字? 如 "From the red fox" 共有4個英文字, 重覆出現請重覆累計.
   (也許使用 String 的 replace()及split()方法)
import java.util.*;
class Main {
    public static void main(String[] args) {
      //小s的內容是一篇文章
      String s= "From the red fox to the fennec fox, foxes look adorable. Because of this, people are sometimes tempted to keep them as pets. However, those who have tried have struggled. Unlike dogs and cats, the different species of fox have not been domesticated. Domestication only happens over a long period of time through selective breeding. Cats and dogs were domesticated by humans thousands of years ago to be pets and companions. Sheep, goats and other animals were domesticated for food. But there may be more to it than that. People who have tried to simply tame individual foxes often speak of a stubborn wildness that is impossible to get rid of. This suggests that foxes harder to tame than other animals. However, one extraordinary experiment has found a way to domesticate foxes. This one study could help us understand how our ancestors domesticated other animals, and indeed what domestication is.";
      
      System.out.println(s);	
      System.out.println();
      
      //---------------------------
      // 你的程式加在以下的區間中
      //---------------------------
      String newS = "";
      
      /*方法一
      ArrayList sList = new ArrayList();
      for(int i=0; i<s.length(); i++){
        if((s.charAt(i) != '.') && (s.charAt(i) != ',')){
          sList.add(s.charAt(i));
        }
      }
      for(int j=0; j<sList.size(); j++){
        newS += sList.get(j).toString();
      }*/
      
      /*方法二*/
      //移除字串中的「,」和「.」
      s.replaceAll(",", "");  //將「,」取代為空字串
      newS = s.replaceAll("[\\pP]", "");  //將「.」取代為空字串
      //System.out.println(newS.replaceAll(".", "")); //為何用replaceAll(".", "")無法將「.」取代為空字串？(其他文字都會一起被取代)
      
      //System.out.println(newS);   //印出移除「,」與「.」的結果
      String sArray[]= newS.split(" "); //以空白分隔
      System.out.println("共" + sArray.length + "個英文字(含重複)");
      //---------------------------
    }
}
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   *(3-8)程式撰寫其他建議.
      s.replaceAll(",", "");  //將「,」取代為空字串
      newS = s.replaceAll("[\\pP]", "");  //將「.」取代為空字串
=> 
      s=s.replaceAll("[,.]", "");  //[,.]是正規表示式, 可參考 "第24課 正規表示式"	   
=======================================================================================


(5)文章中, 總共有多少個英文字? 如 "From the red fox, this fox" 共有5個英文字, 重覆出現只累計1次.
   (也許使用 java.util 中的 HashSet 物件)
import java.util.*;
class Main {
    public static void main(String[] args) {
      //小s的內容是一篇文章
      String s= "From the red fox to the fennec fox, foxes look adorable. Because of this, people are sometimes tempted to keep them as pets. However, those who have tried have struggled. Unlike dogs and cats, the different species of fox have not been domesticated. Domestication only happens over a long period of time through selective breeding. Cats and dogs were domesticated by humans thousands of years ago to be pets and companions. Sheep, goats and other animals were domesticated for food. But there may be more to it than that. People who have tried to simply tame individual foxes often speak of a stubborn wildness that is impossible to get rid of. This suggests that foxes harder to tame than other animals. However, one extraordinary experiment has found a way to domesticate foxes. This one study could help us understand how our ancestors domesticated other animals, and indeed what domestication is.";
      
      System.out.println(s);	
      System.out.println();
      
      //---------------------------
      // 你的程式加在以下的區間中
      //---------------------------
      String newS="", sL="";
      Set<String> set = new HashSet<>();

      //移除字串中的「,」和「.」
      s.replaceAll(",", "");  //將「,」取代為空字串
      newS = s.replaceAll("[\\pP]", "");  //將「.」取代為空字串
      
      //字串一律轉小寫，避免因大小不同，將相同的單字辨識為不同的
      for(int i=0; i<newS.length(); i++){
      	  sL += newS.substring(i,i+1).toLowerCase();
      }
      
      String[] sArray= sL.split(" "); //以空白分隔
      for(String each:sArray){
        set.add(each);
      }
      //System.out.print(set);  //印出不重複的英文字
      System.out.println("共" + set.size() + "個不重複的英文字");
      //---------------------------
    }
}
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   *(3-8)程式撰寫其他建議.
   => 同上
=======================================================================================