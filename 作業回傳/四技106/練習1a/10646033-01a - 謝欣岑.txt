(1)
某個遊樂園大人門票655元, 小孩325元.
若有2個大人及1個小孩同行, 優惠打85折的條件下,
入場費共多少元? (小數捨去, 只印整數)

class Main {
    public static void main(String[] args) {
        int i=655*2+325;
        int a=(int)(i*0.85);
        System.out.println(a);
    }
}
1389
=======================================================================================
(1)沒有問題, 是一個好程式.
(2)程式執行結果有誤.
*(3)程式可以執行, 但請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   *(3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
      => int adult=655;
      => int child=325;
      => int total=(int)((adult*2+child*1)*0.85);
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


(2)
有一個圓形的半徑是15公分, 請問面積是多少平方公分?
請在同一個程式中, 依序:
(a)小數捨去, 只印整數
(b)小數也印出

class Main {
    public static void main(String[] args) {
        int i=(int)(15*15*Math.PI);
        System.out.println(i);
    }
}
706
=======================================================================================
(1)沒有問題, 是一個好程式.
(2)程式執行結果有誤.
*(3)程式可以執行, 但請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   *(3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   => double r=15;
   => .... Math.PI*r*r....   
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


class Main {
    public static void main(String[] args) {
        double i=15.0*15.0*Math.PI;
        System.out.println(i);
    }
}
706.8583470577034
=======================================================================================
(1)沒有問題, 是一個好程式.
(2)程式執行結果有誤.
*(3)程式可以執行, 但請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   *(3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   同上.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


(3)
在一個平面座標(x, y)中有2個點, 座標分別是(10, 5)及(22, 17).
請計算此兩點之間的距離? (印出所有小數位數即可)

class Main {
    public static void main(String[] args) {
        int a=(10-22);
        int b=(5-17);
        int c=a*a+b*b;
        System.out.println(Math.sqrt(c));
    }
}
16.97056274847714
=======================================================================================
(1)沒有問題, 是一個好程式.
(2)程式執行結果有誤.
*(3)程式可以執行, 但請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   *(3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
    => double x1=10, y1=5;
	=> double x2=22, y2=17;
	=> double distance = Math.sqrt(Math.pow(x1-x2,2)+Math.pow(y1-y2,2)) ;
	=> 以後置換座標時, 只要改前2行即可.     
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


(4)
華氏溫度(F)和攝氏溫度(C)轉換公式如下:
華氏= 攝氏*(9/5)+32
請計算:
(a)攝氏32度  = 華氏 ? 度
(b)華氏100度 = 攝氏 ? 度
(印出整數數位數即可, 小數捨去)

class Main {
    public static void main(String[] args) {
        int x=(int)(32*1.8+32);
        System.out.println(x);
    }
}
89
=======================================================================================
(1)沒有問題, 是一個好程式.
(2)程式執行結果有誤.
*(3)程式可以執行, 但請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   *(3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   =>華氏溫度(F)和攝氏溫度(C)
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


class Main {
    public static void main(String[] args) {
        int x=100-32;
        int i=(int)(x/1.8);
        System.out.println(i);
    }
}
37
=======================================================================================
(1)沒有問題, 是一個好程式.
(2)程式執行結果有誤.
*(3)程式可以執行, 但請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   *(3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   *(3-8)程式撰寫其他建議.
    int x=100-32;
    int i=(int)(x/1.8);
	=> 整合成一行
=======================================================================================


(5)
一個圓形的[角度]有360度; 如果用[徑度]為單位, 一個圓形有2*PI度.
請計算: 角度36度  = 徑度 ? 度
(a)小數至第2位, 其後無條件捨去
(b)小數至第2位, 其後無條件進位
(c)小數至第2位, 其後四捨五入

class Main {
    public static void main(String[] args) {
        double i=Math.PI/180*36;
        double a=(Math.floor(i*100.0)/100.0);
        System.out.println(a);
    }
}
0.62
=======================================================================================
(1)沒有問題, 是一個好程式.
(2)程式執行結果有誤.
*(3)程式可以執行, 但請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   *(3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   => double deg=36;
   => double rad=2*Math.PI*deg/360;
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


class Main {
    public static void main(String[] args) {
        double i=Math.PI/180*36;
        double a=(Math.ceil(i*100.0)/100.0);
        System.out.println(a);
    }
}
0.63
=======================================================================================
(1)沒有問題, 是一個好程式.
(2)程式執行結果有誤.
*(3)程式可以執行, 但請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   *(3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


class Main {
    public static void main(String[] args) {
        double i=Math.PI/180*36;
        double a=(Math.round(i*100.0)/100.0);
        System.out.println(a);
    }
}
0.63
=======================================================================================
(1)沒有問題, 是一個好程式.
(2)程式執行結果有誤.
*(3)程式可以執行, 但請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   *(3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================