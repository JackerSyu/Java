1.
class Main {
    public static void main(String[] args) {
        int i=(int)(((655*2)+(325))*0.85);
        System.out.println(i);
    }
}
=========================================================================
(1)沒有問題, 是一個好程式.
*(2)請注意以下的建議.
(3)程式執行結果有誤.
(4)程式撰寫格式有誤.(沒有階層式內縮, 內縮距離不足, 或內縮距離不一致).
(5)在不同段落間加入空行或註解, 程式更容易閱讀.
*(6)以常數表現具有特別意義的變數, 或是變數命名不夠清楚.
(7)沒有作用的型態轉換, 或是型態轉換誤用.
(8)選用的方法與問題不接近或有誤.
*(9)程式撰寫其他建議.
int i=(int)(((655*2)+(325))*0.85); ==> 用了太多組()
=========================================================================


2.
class Main {
    public static void main(String[] args) {
        double i=15*15*Math.PI;
        int n=(int)i;
        System.out.println(n);
        System.out.println(i);
    }
}
=========================================================================
(1)沒有問題, 是一個好程式.
*(2)請注意以下的建議.
(3)程式執行結果有誤.
(4)程式撰寫格式有誤.(沒有階層式內縮, 內縮距離不足, 或內縮距離不一致).
(5)在不同段落間加入空行或註解, 程式更容易閱讀.
*(6)以常數表現具有特別意義的變數, 或是變數命名不夠清楚.
(7)沒有作用的型態轉換, 或是型態轉換誤用.
(8)選用的方法與問題不接近或有誤.
(9)程式撰寫其他建議.
=========================================================================


3.
class Main {
    public static void main(String[] args) {
        double i=Math.sqrt((Math.pow(10-22,2))+(Math.pow(5-17,2)));
        System.out.println(i);
    }
}
=========================================================================
(1)沒有問題, 是一個好程式.
*(2)請注意以下的建議.
(3)程式執行結果有誤.
(4)程式撰寫格式有誤.(沒有階層式內縮, 內縮距離不足, 或內縮距離不一致).
(5)在不同段落間加入空行或註解, 程式更容易閱讀.
*(6)以常數表現具有特別意義的變數, 或是變數命名不夠清楚.
(7)沒有作用的型態轉換, 或是型態轉換誤用.
(8)選用的方法與問題不接近或有誤.
(9)程式撰寫其他建議.
=========================================================================


4.
class Main {
    public static void main(String[] args) {
        int i=(int)(32*(9/5)+32);
        int n=(int)(100-32)*5/9;
        System.out.println(i);
        System.out.println(n);
    }
}
=========================================================================
(1)沒有問題, 是一個好程式.
*(2)請注意以下的建議.
*(3)程式執行結果有誤.
(4)程式撰寫格式有誤.(沒有階層式內縮, 內縮距離不足, 或內縮距離不一致).
(5)在不同段落間加入空行或註解, 程式更容易閱讀.
(6)以常數表現具有特別意義的變數, 或是變數命名不夠清楚.
(7)沒有作用的型態轉換, 或是型態轉換誤用.
(8)選用的方法與問題不接近或有誤.
(9)程式撰寫其他建議.
      int i=(int)(32*(9/5)+32);
改成: int i=(int)(32*1.8+32);	
=========================================================================


5.
class Main {
    public static void main(String[] args) {
        double i=(2*Math.PI)/10;
        double o =(double)Math.round((i*100));
        System.out.println(i);
        System.out.println(Math.floor((i*100))/100);
        System.out.println(Math.floor((i*100))/100+0.01);
        System.out.println(o/100);
    }
}
=========================================================================
(1)沒有問題, 是一個好程式.
*(2)請注意以下的建議.
(3)程式執行結果有誤.
(4)程式撰寫格式有誤.(沒有階層式內縮, 內縮距離不足, 或內縮距離不一致).
(5)在不同段落間加入空行或註解, 程式更容易閱讀.
*(6)以常數表現具有特別意義的變數, 或是變數命名不夠清楚.
(7)沒有作用的型態轉換, 或是型態轉換誤用.
(8)選用的方法與問題不接近或有誤.
*(9)程式撰寫其他建議.
System.out.println(Math.floor((i*100))/100+0.01);
改用 Math.ceil()
=========================================================================