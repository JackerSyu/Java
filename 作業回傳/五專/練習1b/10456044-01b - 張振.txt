=================================
練習01b   
=================================






(1)
輸入身高(公尺)及體重(公斤), 計算輸入值的BMI. 
身體質量指數BMI = 體重(公斤) / 身高(公尺)的平方 
例如:
身高為1.7公尺, 體重為50公斤
BMI大約為17.30103....
請分別輸出:(a)保留小數位數
           (b)小數至第2位, 其後無條件捨去
           (c)小數至第2位, 其後無條件進位
           (d)小數至第2位, 其後四捨五入

import java.util.*;

class Main {
    public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);
        double height, weight;
        
        try{
            System.out.print("請輸入身高(公尺):");
            height=Double.parseDouble(scanner.next().trim());
            
            System.out.print("請輸入體重(公斤):");
            weight=Double.parseDouble(scanner.next().trim());           
        }catch(Exception e){
            System.out.println("資料輸入錯誤!");
            return;
        }     

        //---------------------------
        // 你的程式加在以下的區間中
        //---------------------------
		    double bmi=weight/(height*height);
		    System.out.println(bmi);
		    System.out.println(Math.floor(bmi*100)/100.0);
		    System.out.println(Math.ceil(bmi*100)/100.0);
		    System.out.println(Math.round(bmi*100.0)/100.0);
		
		
        //---------------------------
    }
}
=======================================================================================
(1)沒有問題, 是一個好程式.
(2)程式執行結果有誤.
*(3)程式可以執行, 但請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


(2)
輸入向銀行的借款金額及預計還款的期數,
假設每月循環利率為12%, 以複利計算.
如果在預計還款的期數後一次還清本金及利息, 計算共要還多少錢?
例如:
向銀行借10000元, 一年後還(12期), 共應還38959.7599...元
請分別輸出:(a)保留小數位數
           (b)小數無條件捨去
           (c)小數無條件進位
           (d)四捨五入至整數位

		   
(3)
輸入在平面上A點的座標(x1, y1) 及 B點的座標(x2, y2)
計算兩點之間的距離.
例如:
A點=(10, 20), B點=(3, 30), 兩點間距離約為12.20655...
請分別輸出:(a)保留小數位數
           (b)小數至第2位, 其後無條件捨去
           (c)小數至第2位, 其後無條件進位
           (d)小數至第2位, 其後四捨五入

import java.util.*;

class Main {
    public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);
        double x1, y1,x2,y2;
        
        try{
            System.out.print("請輸入x1:");
            x1=Double.parseDouble(scanner.next().trim());
            
            System.out.print("請輸入y1:");
            y1=Double.parseDouble(scanner.next().trim());
            
            System.out.print("請輸入x2:");
            x2=Double.parseDouble(scanner.next().trim());
            
            System.out.print("請輸入y2:");
            y2=Double.parseDouble(scanner.next().trim());
            
        }catch(Exception e){
            System.out.println("資料輸入錯誤!");
            return;
        }     

        //---------------------------
        // 你的程式加在以下的區間中
        //---------------------------
		    double a=Math.abs(x1-x2),b=Math.abs(y1-y2);
		    double ans=Math.sqrt((a*a)+(b*b));
		    System.out.println(ans);
		    System.out.println(Math.floor(ans*100)/100.0);
		    System.out.println(Math.ceil(ans*100)/100.0);
		    System.out.println(Math.round(ans*100.0)/100.0);
		
		
        //---------------------------
    }
}
=======================================================================================
(1)沒有問題, 是一個好程式.
(2)程式執行結果有誤.
*(3)程式可以執行, 但請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   *(3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
	double a=Math.abs(x1-x2),b=Math.abs(y1-y2);
	=> double a=x1-x2, b=y1-y2;
   (3-8)程式撰寫其他建議.
=======================================================================================		   
(4)
假設美金與台幣的匯率是31.512.
請輸入台幣金額, 計算並輸出最多可換多少美金(只有整數)? 用多少台幣換得?  
例如:
輸入10000元台幣, 輸出317美金, 要用9990元台幣換得(小數無條件進位).

import java.util.*;

class Main {
    public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);
        double input;
        double PI=31.512;
        
        try{
            System.out.print("請輸入台幣:");
            input=Double.parseDouble(scanner.next().trim());
            
        }catch(Exception e){
            System.out.println("資料輸入錯誤!");
            return;
        }     

        //---------------------------
        // 你的程式加在以下的區間中
        //---------------------------
		    int ans1=(int)(Math.ceil(input/PI));
		    int ans2=(int)(ans1*PI);
		    System.out.println(ans1);
		    System.out.println(ans2);
		
        //---------------------------
    }
}
=======================================================================================
(1)沒有問題, 是一個好程式.
(2)程式執行結果有誤.
*(3)程式可以執行, 但請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   *(3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
    PI
    => ??
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================
(5)
假設一家餐廳使用購票機點餐, 付款後有必要會自動找零錢.
購票機內有足夠的50元, 10元, 5元 及 1元 銅板.
請輸入找錢的金額, 計算應找多少個50元/10元/5元及1元, 可以使找還銅板的數量最少.
例如:
輸入:84元 
輸出:
1個50元
3個10元
0個5元
4個1元
共找8個銅板

import java.util.*;

class Main {
    public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);
        double input;
        try{
            System.out.print("請輸入金額:");
            input=Double.parseDouble(scanner.next().trim());
            
        }catch(Exception e){
            System.out.println("資料輸入錯誤!");
            return;
        }     

        //---------------------------
        // 你的程式加在以下的區間中
        //---------------------------
			 int a= (int)(input/50);
			 int b= (int)((input-(a*50))/10);
			 int c= (int)((input-(a*50)-(b*10))/5);
			 int d= (int)(input-(a*50)-(b*10)-(c*5));
			 System.out.println(a+"個50元");
			 System.out.println(b+"個10元");
			 System.out.println(c+"個5元");
			 System.out.println(d+"個1元");
		
        //---------------------------
    }
}

=======================================================================================
(1)沒有問題, 是一個好程式.
(2)程式執行結果有誤.
*(3)程式可以執行, 但請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   *(3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   *(3-8)程式撰寫其他建議.
	int b= (int)((input-(a*50))/10);
	=> int b=input%50;
=======================================================================================