(1)
字串的長度是至少為2.

class Main {
    public static void main(String[] args) {
        
        String input="AAA";
        boolean flag=true;
        
            if (input.length() == 0 || input.length()==1) {
                flag = false;    
            }

            System.out.println(input);
            System.out.println(flag);
    }
}
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
class Main {
    public static void main(String[] args) {
        
        String input="AAA";
        boolean flag=true;
        
            if (input.length() == 0 || input.length()==1) {
                flag = false;    
            }

            System.out.println(input);
            System.out.println(flag);
    }
}

=>
class Main {
    public static void main(String[] args) {        
        String input="AAA";
        boolean flag=true;
        
        if (input.length() == 0 || input.length()==1) {
            flag = false;    
        }

        System.out.println(input);
        System.out.println(flag);
    }
}   
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


(2)
字串的長度是至少為2, 而且(第1碼)與(最後1碼)相同.

class Main {
    public static void main(String[] args) {
        
        String input="AA";
        boolean flag=true;
        
            if (input.length() == 0 || input.length()==1) {
                flag = false;    
            }
            
            char first = input.charAt(0);
            char last  = input.charAt(input.length()-1);

            if (first!=last) {
                flag = false;    
            }

            System.out.println(input);
            System.out.println(flag);
    }
}
=======================================================================================
(1)程式沒有明顯問題.
*(2)程式執行結果有誤.
=> 當待檢查字串為空字串時, 如 String s="", 程式執行時將出現錯誤.
class Main {
    public static void main(String[] args) {        
        String input="";
        boolean flag=true;
        
        if (input.length() >= 2) {
            char first = input.charAt(0);
            char last  = input.charAt(input.length()-1);

            if (first!=last) {
                flag=false;    
            }
        }else{
            flag=false;
        }
        
        System.out.println(input);
        System.out.println(flag);
    }
}

(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


(3)
字串的長度是5~10位, 而且每一碼都相同.

class Main {
    public static void main(String[] args) {
        
        String input="AAAAAAAAA";
        boolean flag=true;
        
            if (input.length()<5||input.length()>10) {
                flag = false;    
            }
            
            char first = input.charAt(0);

            for (int i =0 ; i<input.length() ; i++) {
                    
                    char number = input.charAt(i);
                    
                    if (first!=number) {
                       flag = false;  
                    }
            }

            System.out.println(input);
            System.out.println(flag);
    }
}
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


(4)
字串長度為奇數, 內容只能有數字.

class Main {
    public static void main(String[] args) {
        
        String input="012345612";
        boolean flag=true;
        
            if (input.length()%2!=1) {
                flag = false;    
            }

            for (int i =0 ; i<input.length() ; i++) {
                    
                    char number = input.charAt(i);
                    
                    if (number<'0' || number>'9') {
                       flag = false;  
                    }
            }

            System.out.println(input);
            System.out.println(flag);
    }
}
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


(5)
字串長度至少為5, 內容只能有數字及小數點.
字串內容可以沒有小數點, 但如果內容有小數點, 只能有1個, 而且小數點之後一定要有其他數字.

class Main {
    public static void main(String[] args) {
        
        String input="01.23";
        boolean flag=true;
        int dot = 0;      
        
            if (input.length()<5) {
                flag = false;    
            }

            for (int i =0 ; i<input.length() ; i++) {
                    
                    char number = input.charAt(i);
                    
                    if (number=='.' && dot == 1) {
                        flag = false;
                    }
                    
                    if (number=='.') {
                        dot = 1 ;
                    }
                    
                    if (number<'0'&&number!='.'||number>'9'&&number!='.') {
                       flag = false;  
                    }
            }
            
            if (input.charAt(input.length()-1)=='.') {
                flag = false;
            }

            System.out.println(input);
            System.out.println(flag);
    }
}
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   *(3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
                    if (number<'0'&&number!='.'||number>'9'&&number!='.') {
                       flag = false;  
                    }
=>
                    if ((number<'0'||number>'9')&&number!='.') {
                       flag = false;  
                    }					
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================