=================================
練習02a 字串的處理
=================================
測試以下的字串是否符合條件:

(1)
字串的長度是至少為2.
例如:
a5322121a  (正確)
class Main {
    public static void main(String[] args) {
        String s="a5322121a";
        int i=s.length();
        boolean flag=true;
          if(i<2){
            flag=false;
          }
        System.out.println(s);
        System.out.println(flag);
    }
}
a5322121a
true
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
class Main {
    public static void main(String[] args) {
        String s="a5322121a";
        int i=s.length();
        boolean flag=true;
          if(i<2){
            flag=false;
          }
        System.out.println(s);
        System.out.println(flag);
    }
}

=>
class Main {
    public static void main(String[] args) {
        String s="a5322121a";
		boolean flag=true;
		
        if(s.length()<2){
            flag=false;
        }
		
        System.out.println(s);
        System.out.println(flag);
    }
}   
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


(2)
字串的長度是至少為2, 而且(第1碼)與(最後1碼)相同.
例如:
a5322121a  (正確)
class Main {
    public static void main(String[] args) {
        String s="a5322121a";
		    int a=s.length();
        boolean flag=true;
        for(int i=0;i<a;i++){
          char c=s.charAt(i);
          if(s.charAt(0)!=s.charAt(a-1)||a<2){
            flag=false;
          }
        }
        System.out.println(s);
        System.out.println(flag);
    }
}
a5322121a
true
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   *(3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
class Main {
    public static void main(String[] args) {
        String s="a5322121a";
		    int a=s.length();
        boolean flag=true;
        for(int i=0;i<a;i++){
          char c=s.charAt(i);
          if(s.charAt(0)!=s.charAt(a-1)||a<2){
            flag=false;
          }
        }
        System.out.println(s);
        System.out.println(flag);
    }
}

=>
class Main {
    public static void main(String[] args) {
        String s="a5322121a";		
        boolean flag=true;
		
        if(s.length()<2 || s.charAt(0)!=s.charAt(s.length()-1)){
            flag=false;          
        }
		
        System.out.println(s);
        System.out.println(flag);
    }
}   
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


(3)
字串的長度是5~10位, 而且每一碼都相同.
例如:
aaaaaa  (正確)
class Main {
    public static void main(String[] args) {
        String s="aaaaaa";
        int a=s.length();
        boolean flag=true;
        for(int i=0;i<s.length();i++){
          char c=s.charAt(i);
          if(s.charAt(0)!=s.charAt(i)||a<5||a>10){
            flag=false;
          }
        }
        System.out.println(s);
        System.out.println(flag);
    }
}
aaaaaa
true
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   *(3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
class Main {
    public static void main(String[] args) {
        String s="aaaaaa";
        int a=s.length();
        boolean flag=true;
        for(int i=0;i<s.length();i++){
          char c=s.charAt(i);
          if(s.charAt(0)!=s.charAt(i)||a<5||a>10){
            flag=false;
          }
        }
        System.out.println(s);
        System.out.println(flag);
    }
}

=>
class Main {
    public static void main(String[] args) {
        String s="aaaaaa";        
        boolean flag=true;
		
		if(s.length()>10||s.length()<5){
		    flag=false;
		}
		
        for(int i=0; i<s.length(); i++){            
            if(s.charAt(0)!=s.charAt(i)){
                flag=false;
            }
        }
		
        System.out.println(s);
        System.out.println(flag);
    }
}   
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


(4)
字串長度為奇數, 內容只能有數字.
例如:
54345   (正確)
class Main {
    public static void main(String[] args) {
        String s="54345";
		    int a=s.length();
		    int b=a%2;
        boolean flag=true;
        for(int i=0;i<a;i++){
          char c=s.charAt(i);
          if(c>'9' || c<'0' || b==0){
            flag=false;
          }
        }
        System.out.println(s);
        System.out.println(flag);
    }
}
54345
true
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   *(3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
=>
class Main {
    public static void main(String[] args) {
        String s="54345a1";
        boolean flag=true;
        
        if(s.length()%2==0){
            flag=false;
        }
        
        for(int i=0; i<s.length(); i++){
            char c=s.charAt(i);
            if(c>'9' || c<'0'){
                flag=false;
            }
        }
        
        System.out.println(s);
        System.out.println(flag);
    }
}
   
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


(5)
字串長度至少為5, 內容只能有數字及小數點.
字串內容可以沒有小數點, 但如果內容有小數點, 只能有1個, 而且小數點之後一定要有其他數字.
例如:
54221     (正確)
class Main {
    public static void main(String[] args) {
        String s="54221";
        boolean flag=true;
        int a=s.length();
        int cnt=0;
        for(int i=0;i<s.length();i++){
          char c=s.charAt(i);
          if(c=='.'){
             cnt++;
          }   
          if(c>'9' || c<'0' && cnt>1 || a<5 ||s.charAt(a-1)=='.'){
             flag=false;
          }   
        }
        System.out.println(s);
        System.out.println(flag);
    }
}
54221
true
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   *(3-8)程式撰寫其他建議.

=> 將多個檢查問題分開檢查, 程式更容易撰寫:
class Main {
    public static void main(String[] args) {
        String s="54221.23";
        boolean flag=true;
        int cnt=0;
        
        if(s.length()<5){
            flag=false;
        }
        
        for(int i=0; i<s.length(); i++){
            char c=s.charAt(i);
            
            if(c=='.'){
               cnt++;
            }
            
            if((c>'9' || c<'0' && c!='.') || cnt>1){
               flag=false;
            }   
        }
        
        if(s.charAt(s.length()-1)=='.'){
            flag=false;
        }
        
        System.out.println(s);
        System.out.println(flag);
    }
}   
=======================================================================================