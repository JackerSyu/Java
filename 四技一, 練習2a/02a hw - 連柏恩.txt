(1)
字串的長度是至少為2.
例如:
a5322121a  (正確)
a          (不正確)
class Main{

  public static void main(String[] args){

    String a="a";

    boolean f=true;

    if(a.length()>=2){

      System.out.println(f);

    }else{

      System.out.println(f=false);

    }

  }

}
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   *(3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
    if(a.length()>=2){
      System.out.println(f);
    }else{
      System.out.println(f=false);
    }
=>
    if(a.length()>=2){
      System.out.println(true);
    }else{
      System.out.println(false);
    }	
	
   (3-8)程式撰寫其他建議.
=======================================================================================


(2)
字串的長度是至少為2, 而且(第1碼)與(最後1碼)相同.
例如:
a5322121a  (正確)
a12321b    (不正確)
class Main{
  public static void main(String[] args){
    String a="ppp";
    int i=a.length();
    boolean f=true;
    if(a.length()>=2 && a.charAt(0) == a.charAt(i-1)){
      System.out.println(f);
    }else{
       System.out.println(f=false);
    }
  }
}
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   *(3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   同上
   (3-8)程式撰寫其他建議.
=======================================================================================


(3)
字串的長度是5~10位, 而且每一碼都相同.
例如:
aaaaaa  (正確)
ccccccc (正確)
111     (不正確)
123123  (不正確)
class Main{
  public static void main(String[] args){
    String a="sssss";
    boolean result=false;
    int sum=a.length();
    int cnt=0;
    if(sum>=5&&sum<=10) {
      for(int i=0;i<(sum-1);i++) {
        if(a.charAt(i)==a.charAt(i+1)) {
          cnt++;
        }
      }
      if(cnt==(sum-1)) {
        result=true;
      }else {
        result=false;
      }
    }else {
      result=false;
    }
    
    if(result==true) {
      System.out.println("true");
    }else {
      System.out.println("false");
    }
  }
}
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   *(3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
    if(sum>=5&&sum<=10) {
      for(int i=0;i<(sum-1);i++) {
        if(a.charAt(i)==a.charAt(i+1)) {
          cnt++;
        }
      }
      if(cnt==(sum-1)) {
        result=true;
      }else {
        result=false;
      }
    }else {
      result=false;
    }
=>
    if(sum>=5&&sum<=10) {
      for(int i=0;i<(sum-1);i++) {
        if(a.charAt(i)==a.charAt(i+1)) {
          cnt++;
        }
      }
      if(cnt==(sum-1)) {
        result=true;
      }
    }	
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   *(3-8)程式撰寫其他建議.
   if(result==true) {
=> if(result) {   
=======================================================================================


(4)
字串長度為奇數, 內容只能有數字.
例如:
54345   (正確)
42*a2   (不正確)
1234    (不正確)
1421    (不正確)
class Main{
  public static void main(String[] args){
    String a="sssss";
    boolean result=false;
    int sum=a.length();
    int cnt=0;
    if(sum>=5&&sum<=10) {
      for(int i=0;i<(sum-1);i++) {
        if(a.charAt(i)==a.charAt(i+1)) {
          cnt++;
        }
      }
      if(cnt==(sum-1)) {
        result=true;
      }else {
        result=false;
      }
    }else {
      result=false;
    }
    
    if(result==true) {
      System.out.println("true");
    }else {
      System.out.println("false");
    }
  }
}
=======================================================================================
(1)程式沒有明顯問題.
*(2)程式執行結果有誤.
=>這個程式和前一個程式有什麼不同?
(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   *(3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   *(3-8)程式撰寫其他建議.
=======================================================================================


(5)
字串長度至少為5, 內容只能有數字及小數點.
字串內容可以沒有小數點, 但如果內容有小數點, 只能有1個, 而且小數點之後一定要有其他數字.
例如:
54221     (正確)
543.1     (正確)
5321.     (不正確)
5.3.1     (不正確)
class Main{
  public static void main(String[] args){
    String a="11.343";
    boolean result=false;
    int sum=a.length();
    int pointcnt=0;
    int numcnt=0;
    int pointsite=sum;
    
    if(sum>=5) {
      for(int i=0;i<sum;i++) {
        if(a.charAt(i)=='.') {
          pointcnt++;
          pointsite=i;
        }else if(a.charAt(i)>='0'&&a.charAt(i)<='9') {
          numcnt++;
        }
      }
      if(pointcnt<=1){
        if(pointsite==0){
          result=false;
        }else if(pointsite==(sum-1)) {
          result=false;
        }else {
          if(numcnt==(sum-pointcnt)) {
            result=true;
          }else {
            result=false;
          }
        }
      }else {
        result=false;
      }
    }else {
      result=false;
    }
    
    if(result==true) {
      System.out.println("true");
    }else {
      System.out.println("false");
    }
  }
}
=======================================================================================
*(1)程式沒有明顯問題.
(2)程式執行結果有誤.
(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   *(3-8)程式撰寫其他建議.
	if(pointsite==0){
        result=false;   
=> 不必檢查.

	if(result==true) {		
=>  if(result)	
=======================================================================================