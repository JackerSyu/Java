=================================
練習02a 字串的處理
=================================
測試以下的字串是否符合條件:

(1)
字串的長度是至少為2.
例如:
a5322121a  (正確)
a          (不正確)

        String quest1 = "a5322121a";
        boolean ans1 = true;
        if(quest1.length() < 2) {
            ans1 = false;
        }
        System.out.println(ans1);
		//ans1 = true
		
=======================================================================================
*(1)程式沒有明顯問題.
(2)程式執行結果有誤.
(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================		

(2)
字串的長度是至少為2, 而且(第1碼)與(最後1碼)相同.
例如:
a5322121a  (正確)
a12321b    (不正確)

        String quest2 = "a12321b";
        boolean ans2 = true;
        int finalword = quest2.length() - 1;
        if(quest2.length() < 2 || quest2.charAt(0) != quest2.charAt(finalword)){
            ans2 = false;
        }
        System.out.println(ans2);
		//ans2 = false
=======================================================================================
*(1)程式沒有明顯問題.
   int finalword = quest2.length() - 1;
   if(quest2.length() < 2 || quest2.charAt(0) != quest2.charAt(finalword)){

=> if(quest2.length() < 2 || quest2.charAt(0) != quest2.charAt(quest2.length() - 1)){		

(2)程式執行結果有誤.
(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


(3)
字串的長度是5~10位, 而且每一碼都相同.
例如:
aaaaaa  (正確)
ccccccc (正確)
111     (不正確)
123123  (不正確)

        String quest3 = "111";
        boolean ans3 = true;
        if(quest3.length() >= 5 && quest3.length() <= 10){
            for(int i = 0 ; i < quest3.length() ; i = i + 1){
                if(quest3.charAt(i) != quest3.charAt(0)){
                    ans3 = false;
                    break;
                }
            }
        }else{
            ans3 = false;
        }
        System.out.println(ans3);
		//ans3 = false
=======================================================================================
*(1)程式沒有明顯問題.
   for(int i = 0 ; i < quest3.length() ; i = i + 1){
=> for(int i = 0 ; i < quest3.length() ; i++){

(2)程式執行結果有誤.
(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


(4)
字串長度為奇數, 內容只能有數字.
例如:
54345   (正確)
42*a2   (不正確)
1234    (不正確)
1421    (不正確)

        String quest4 = "42*a2";
        boolean ans4 = true;
        if(quest4.length() % 2 == 1){
            for(int i = 0 ; i < quest4.length() ; i = i + 1){
                if(quest4.charAt(i) < '0' || quest4.charAt(i) > '9'){
                    ans4 = false;
                    break;   
                }
            }
        }else{
            ans4 = false;
        }
        System.out.println(ans4);
		//ans4 = false
=======================================================================================
*(1)程式沒有明顯問題.
=> 同上
(2)程式執行結果有誤.
(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


(5)
字串長度至少為5, 內容只能有數字及小數點.
字串內容可以沒有小數點, 但如果內容有小數點, 只能有1個, 而且小數點之後一定要有其他數字.
例如:
54221     (正確)
543.1     (正確)
5321.     (不正確)
5.3.1     (不正確)

        String quest5 = "5321.";
        boolean ans5 = true;
        int check5 = 0;
        if(quest5.length() >= 5){
            for(int i = 0 ; i < quest5.length(); i = i + 1){                
                if(quest5.charAt(i) == '.'){
                    check5 = check5 + 1;
                    if(i == quest5.length() - 1 || quest5.charAt(i+1) < '0' || quest5.charAt(i+1) > '9' || check5 > 1){
                        ans5 = false;
                        break;
                    }
                }else if(quest5.charAt(i) < '0' || quest5.charAt(i) > '9'){
                    ans5 = false;
                    break;
                }
            }
        }else{
            ans5 = false;
        }
        System.out.println(ans5);

		//ans5 = false
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   *(3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
                     if(i == quest5.length() - 1 || quest5.charAt(i+1) < '0' || quest5.charAt(i+1) > '9' || check5 > 1){
                        ans5 = false;
                        break;
                    }  
=>
                    if(i == quest5.length()-1 || check5 > 1){
                        ans5 = false;
                        break;
                    }   
   (3-8)程式撰寫其他建議.
=======================================================================================		