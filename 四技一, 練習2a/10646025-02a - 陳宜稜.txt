(1)字串的長度是至少為2.
例如:
a5322121a  (正確)
a          (不正確)
class Main {
    public static void main(String[] args) {
        String s="a5322121a";
    
        if(s.length()>2){
            System.out.println("正確");
        }else{
            System.out.println("不正確");
        }
    }
}
=======================================================================================
*(1)程式沒有明顯問題.
(2)程式執行結果有誤.
(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


(2)字串的長度是至少為2, 而且(第1碼)與(最後1碼)相同.
例如:
a5322121a  (正確)
a12321b    (不正確)
class Main {
    public static void main(String[] args) {
        String s="a5322121a";
    
        if(s.length()>2&&s.charAt(0)==s.charAt(s.length()-1)){
            System.out.println("正確");
        }else{
            System.out.println("不正確");
        }
    }
}
=======================================================================================
*(1)程式沒有明顯問題.
(2)程式執行結果有誤.
(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


(3)字串的長度是5~10位, 而且每一碼都相同.
例如:
aaaaaa  (正確)
ccccccc (正確)
111     (不正確)
123123  (不正確)
class Main {
    public static void main(String[] args) {
        String s="aaaaaa";
        boolean result=false;
        int total=s.length();
        int cnt=0;
        if(total>=5&&total<=10){
          for(int i=0;i<(total-1);i++){
              if(s.charAt(i)==s.charAt(i+1)){
              cnt++;
              }
          }
          if(cnt==(total-1)){
            result=true;
          }else{
            result=false;
          }
        }
          if(result==true){
            System.out.println("正確");
          }else{
            System.out.println("不正確");
          }
    }
}
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   *(3-8)程式撰寫其他建議.
          if(result==true){
            System.out.println("正確");
          }else{
            System.out.println("不正確");
          }

=>
          if(result){
              System.out.println("正確");
          }else{
              System.out.println("不正確");
          }		  
=======================================================================================


(4)字串長度為奇數, 內容只能有數字.
例如:
54345   (正確)
42*a2   (不正確)
1234    (不正確)
1421    (不正確)
class Main {
    public static void main(String[] args) {
        String s="54345";
        int cnt=0;
        boolean  result=false;
        
          if(s.length()%2==1){
            for(int i=0;i<s.length();i++){
              if(s.charAt(i)>='0'&&s.charAt(i)<='9'){
                cnt++;
              }
            }
            if(cnt==s.length()){
              result=true;
            }else{
              result=false;
            }
            if(result==true){
              System.out.println("正確");
            }else{
              System.out.println("不正確");
            }
          }
    }
}
=======================================================================================
(1)程式沒有明顯問題.
*(2)程式執行結果有誤.
class Main {
    public static void main(String[] args) {
        String s="54345";
        int cnt=0;
        boolean  result=false;
        
          if(s.length()%2==1){
            for(int i=0;i<s.length();i++){
              if(s.charAt(i)>='0'&&s.charAt(i)<='9'){
                cnt++;
              }
            }
            if(cnt==s.length()){
              result=true;
            }else{
              result=false;
            }
            if(result==true){
              System.out.println("正確");
            }else{
              System.out.println("不正確");
            }
          }
    }
}
=>
class Main {
    public static void main(String[] args) {
        String s="543451";
        int cnt=0;
        boolean result=false;
        
        if(s.length()%2==1){
            for(int i=0;i<s.length();i++){
                if(s.charAt(i)>='0'&&s.charAt(i)<='9'){
                    cnt++;
                }
            }
            
            if(cnt==s.length()){
                result=true;
            }
        }

        if(result){
            System.out.println("正確");
        }else{
            System.out.println("不正確");
        }
    }
}

(3)程式需要自行測試, 請注意以下的問題.
   (3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   (3-8)程式撰寫其他建議.
=======================================================================================


字串長度至少為5, 內容只能有數字及小數點.
字串內容可以沒有小數點, 但如果內容有小數點, 只能有1個, 而且小數點之後一定要有其他數字.
例如:
54221     (正確)
543.1     (正確)
5321.     (不正確)
5.3.1     (不正確)
class Main {
  public static void main(String[] args) {
      String s="11.1111";
      boolean result=true;
      int total=s.length();
      int pointsite=total;
      int pointcnt=0;
      int Stringcnt=0;
      if(total>=5){
        for(int i=0;i<total;i++){
          if(s.charAt(i)=='.'){
            pointcnt++;
            pointsite=i;
          }
          if(s.charAt(i)>='0'&&s.charAt(i)<='9'){
            Stringcnt++;
          }
        }
        if(Stringcnt==(total-pointcnt)){
          if(pointcnt>1){
          result=false;
          }else{
            if(pointsite==0){
              result=false;
            }else if(pointsite==(total-1)){
              result=false;
            }else{
              result=true;
            }
          }
        }else{
          result=false;
        }
      }else{
        result=false;
      }
        
      
      if(result==true) {
        System.out.println("正確");
      }else {
        System.out.println("不正確");
      }
    }
}
=======================================================================================
(1)程式沒有明顯問題.
(2)程式執行結果有誤.
*(3)程式需要自行測試, 請注意以下的問題.
   *(3-1)程式格式有誤: 沒有階層式內縮, 內縮距離不足, 內縮距離不一致, 或無意義的空行.
   => 最好再改格式, 寫出容易閱讀的程式.
   
   (3-2)不容易閱讀: 具有特定意義的程式段落缺少分隔或註解, 或是同一行中擠進太多內容.                     
   (3-3)變數命名不適合: 未給予具有特別意義的變數符合其意義的名稱.
   (3-4)誤用常數: 程式中重覆出現特定數值, 或使用的常數與其他變數過度相依.
   (3-5)過於複雜的設計: 很明顯有更簡單的設計方式可以取代現有設計.
   (3-6)重覆或過於相似的程式段落: 程式中存在多個相同或相似段落, 明顯可整合但未整合.
   (3-7)沒有意義的指令: 存在不影響程式執行結果, 但又會被執行的程式敘述.
   *(3-8)程式撰寫其他建議.
   if(result==true) {
=> if(result) {   
=======================================================================================