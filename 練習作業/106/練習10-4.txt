=================================
練習10d
=================================

以下這個題目來自[大學程式能力檢定](Collegiate Programming Examination, CPE)在2017/9/26考試的考題.
當次應考的1854名考生中, 有1230人(66.3%)可完成至少1題; 
能完成2題以上的考生, 只剩792人(42.7%);
所有考生平均完成題數是1.34題.

那次的考試共有7題, 以下是第1題.

1.
完成「信用卡」(CreditCard)類別, 如下:
成員:
  (1)「卡號」(cardNo)
方法:
  (1) 建構元(傳入1個參數)
  (2) 建構元(不傳參數)
  (3) 1個getter方法, 分別取出成員值.
  (4) 1個setter方法, 分別設定成員值.
  (5) 另有一個方法, 檢查信用卡號是否有效:
      public boolean isValid()
	  
      一組信用卡號由16碼0~9的數字組成, 如: 5181 2710 9900 0012, 檢查信用卡號是否有效的步驟如下:
      (1) 取出奇數位卡號(不含空白):
          * *  * *  * *  * * 	   
          5181 2710 9900 0012	  
		  
      (2) 將取出的值分別乘以2:
          10, 16, 4, 2, 18, 0, 0, 2

      (3) 將步驟2的每個數值的[十位數值]及[個位數值]加總:
          (1+0) + (1+6) + (0+4) + (0+2) + (1+8) + (0+0) + (0+0) + (0+2) = 25
       		  
      (4) 取出偶數位卡號(不含空白):
           * *  * *  * *  * *	   
          5181 2710 9900 0012	

      (5) 將步驟4的每個數值加總:
          1 + 1 + 7 + 0 + 9 + 0 + 0 + 2 = 20

      (6) 將步驟3及步驟5的計算結果加總:
          25 + 20 = 45

      (7) 如果步驟(6)的值為10的倍數即為有效卡號, 否則為無效.

	  
 
----------------------------------------------------------------------------------- 
測試程式如下:
-----------------------------------------------------------------------------------  
import java.util.*;

class Main{
    public static void main(String args[]){
        //建立一個可存放多個物件的串列清單
        ArrayList arrayList = new ArrayList();
        
        //將多個「信用卡」物件加入串列清單中
        arrayList.add(new CreditCard("5181 2710 9900 0012"));
        arrayList.add(new CreditCard("5181 2710 9900 0017"));
        arrayList.add(new CreditCard("5241 1503 1819 2904"));
        arrayList.add(new CreditCard("5241 1503 1318 2904"));   
		
        //逐一列印信用卡資料			
        for(int i=0; i<arrayList.size(); i++){
            //取出串列清單中的第i個物件		
            CreditCard c = (CreditCard)arrayList.get(i);                       
			
            //呼叫物件的方法, 印出物件資訊			
            System.out.println("卡號:" + c.getCardNo());
            System.out.println("是否有效:" + c.isValid());
            System.out.println("--------------------");
        }
    }
}
----------------------------------------------------------------------------------- 
