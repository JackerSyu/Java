
一. 讀入agriculture.csv, 由[蔬菜類別]產生[蔬菜物件], 呼叫物件的方法, 寫至out.csv
    1. 參考範例: J05
    2. 輸入檔:   agriculture.csv 
    3. 輸入欄位: 交易日期, 市場名稱, 作物名稱, 高價, 中價, 下價, 平均價, 交易量       
    4. 輸出檔:   out.csv  
    5. 輸出說明:
       (1) 輸出所有蔬菜資料
       (2) 輸出欄位: 交易日期, 市場名稱, 作物名稱, 高價, 中價, 下價, 平均價, 交易量, 總交易金額
    6. 類別說明:
    
        public class Vegetable{
            //===========================
            //成員
            //===========================     
            public String transDate;
            public String marketName;    
            public String vegeName;
            public double highPrice;
            public double midPrice;
            public double lowPrice;
            public double avgPrice;
            public int amount;			
			
            //===========================
            //方法(計算總交易金額)
            //===========================    
            public double totalPrice(){
                //自行完成               
            }  
            //=========================== 			
        }
		
    7. 方法說明:
       (1) 總交易金額 = 平均價 * 交易量

	   

二. 讀入agriculture.csv, 由[蔬菜類別]產生[蔬菜物件], 呼叫物件的方法, 寫至out.csv
    1. 參考範例: J05
    2. 輸入檔:   agriculture.csv 
    3. 輸入欄位: 交易日期, 市場名稱, 作物名稱, 高價, 中價, 下價, 平均價, 交易量       
    4. 輸出檔:   out.csv
    5. 輸出說明:
       (1) 僅輸出市場名稱為[台北一]及[台北二]的蔬菜資料
       (2) 輸出欄位: 交易日期, 市場名稱, 作物名稱, 高價, 中價, 下價, 平均價, 交易量, 總交易金額
    6. 類別說明:
    
        public class Vegetable{
            //===========================
            //成員
            //===========================     
            public String transDate;
            public String marketName;    
            public String vegeName;
            public double highPrice;
            public double midPrice;
            public double lowPrice;
            public double avgPrice;
            public int amount;			
			
            //===========================
            //方法(計算總交易金額)
            //===========================    
            public double totalPrice(){
                //自行完成               
            }  
            //=========================== 			
        }
		
    7. 方法說明:
       (1) 總交易金額 = 平均價 * 交易量


	   
三. 讀入agriculture.csv, 由[蔬菜類別]產生[蔬菜物件], 呼叫物件的方法, 寫至out.csv
    1. 參考範例: J05
    2. 輸入檔:   agriculture.csv 
    3. 輸入欄位: 交易日期, 市場名稱, 作物名稱, 高價, 中價, 下價, 平均價, 交易量       
    4. 輸出檔:   out.csv
    5. 輸出說明:
       (1) 僅輸出蔬菜名稱中有[瓜]的蔬菜資料
       (2) 輸出欄位: 交易日期, 市場名稱, 作物名稱, 高價, 中價, 下價, 平均價, 交易量, 總交易金額
    6. 類別說明:
    
        public class Vegetable{
            //===========================
            //成員
            //===========================     
            public String transDate;
            public String marketName;    
            public String vegeName;
            public double highPrice;
            public double midPrice;
            public double lowPrice;
            public double avgPrice;
            public int amount;			
			
            //===========================
            //方法(計算總交易金額)
            //===========================    
            public double totalPrice(){
                //自行完成               
            }  
            //=========================== 			
        }
		
    7. 方法說明:
       (1) 總交易金額 = 平均價 * 交易量



四. 讀入agriculture.csv, 由[蔬菜類別]產生[蔬菜物件], 呼叫物件的方法, 寫至out.csv
    1. 參考範例: J05
    2. 輸入檔:   agriculture.csv 
    3. 輸入欄位: 交易日期, 市場名稱, 作物名稱, 高價, 中價, 下價, 平均價, 交易量         
    4. 輸出檔:   out.csv 
    5. 輸出說明:
       (1) 輸出所有蔬菜資料
       (2) 輸出欄位: 交易日期, 市場名稱, 作物名稱, 上價, 中價, 下價, 上漲百分比, 下跌百分比
    6. 類別說明:
    
        public class Vegetable{
            //===========================
            //成員
            //===========================     
            public String transDate;
            public String marketName;    
            public String vegeName;
            public double highPrice;
            public double midPrice;
            public double lowPrice;
            public double avgPrice;
            public int amount;			
			
            //===========================
            //方法(計算總交易金額)
            //===========================    
            public double totalPrice(){
                //自行完成               
            }  		

            //===========================
            //方法(計算上漲百分比)
            //===========================    
            public double raise(){
                //自行完成               
            } 

            //===========================
            //方法(計算下跌百分比)
            //===========================    
            public double down(){
                //自行完成               
            } 
            //=========================== 			
        }	
	
    7. 方法說明:
       (1) 總交易金額 = 平均價 * 交易量    
       (2) 上漲百分比 = 上價 / 中價  
       (3) 下跌百分比 = 下價 / 中價    
	   
	   
